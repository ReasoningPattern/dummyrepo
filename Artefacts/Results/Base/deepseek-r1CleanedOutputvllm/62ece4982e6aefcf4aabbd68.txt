import math

def int_to_string(number: int, alphabet: List[str], padding: Optional[int] = None) -> str:
    """
    Convert a number to a string, using the given alphabet.
    
    The number represents a short UUID.
    The output has the most significant digit first.
    @param number: Int value
    @param alphabet : List with letters
    @param padding : Optional with int value
    @return string value corresponded to int
    """
    if number == 0:
        return alphabet[0]
    
    L = len(alphabet)
    if L == 0:
        raise ValueError("Alphabet cannot be empty.")
    
    n = math.ceil(math.log(number + 1, L))
    
    s = []
    for _ in range(n):
        s.append(alphabet[number % L])
        number = number // L
    
    s = ''.join(reversed(s))
    
    if padding is not None:
        if padding < len(s):
            s = s[-padding:]
        else:
            s = s.ljust(padding, alphabet[0])
    
    return s