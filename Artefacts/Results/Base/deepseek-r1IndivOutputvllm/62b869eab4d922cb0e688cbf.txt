

```python
def generate_default_observer_schema(app):
    """
    Generate the default observer schema for each Kubernetes resource present in ``spec.manifest`` for which a custom observer schema hasn't been specified.
    """
    for resource in app.get('spec', {}).get('manifest', []):
        if not 'observer' in app['observers']:
            app['observers']['observer'] = {}
        if not 'kind' in resource:
            continue
        resource_name = resource.get('name')
        if not resource_name:
            continue
        if 'namespace' in resource:
            resource_name = f"{resource['namespace']}.{resource_name}"
        if not resource_name:
            continue
        if 'kind' not in app['observers']['observer']:
            app['observers']['observer']['kind'] = resource['kind']
        if 'resource_name' not in app['observers']['observer']:
            app['observers']['observer']['resource_name'] = resource_name
        if not 'observers' in app['observers']['observer']:
            app['observers']['observer']['observers'] = {}
        app['observers']['observer']['observers']['class'] = 'kubernetes Observer'
        app['observers']['observer']['observers']['method'] = 'default'
    return app
```