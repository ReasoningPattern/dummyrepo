

To generate the Python code based on the provided function signature and docstring, we need to create a function that runs a given function in a subprocess. The function should accept a target function, additional command-line arguments, a timeout, and extra environment variables. It should return the CompletedProcess instance.

The solution involves using the `subprocess.run` function with the `shell=True` parameter to execute the target function. The function is called within a subprocess, and the command is constructed by combining the Python executable, the module path of the target function, the provided arguments, and the function name.

Here is the generated code:

```python
import subprocess
import sys

def subprocess_run_helper(func, *args, timeout=None, extra_env=None):
    module_path = sys.modules[func.__module__].__file__
    command_list = ['python', module_path] + list(args) + [func.__name__]
    proc = subprocess.run(
        command_list,
        timeout=timeout,
        env=extra_env
    )
    return proc
```