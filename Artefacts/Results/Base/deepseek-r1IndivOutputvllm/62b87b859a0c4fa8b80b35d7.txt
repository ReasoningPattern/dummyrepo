

```python
def to_csv(self, separator=",", header=None):
    """
    .. deprecated:: 0.5 in Lena 0.5 to_csv is not used.
      Iterables are converted to tables.

    Convert graph's points to CSV.

    *separator* delimits values, the default is comma.

    *header*, if not ``None``, is the first string of the output
    (new line is added automatically).

    Since a graph can be multidimensional,
    for each point first its coordinate is converted to string
    (separated by *separator*), then each part of its value.

    To convert :class:`Graph` to CSV inside a Lena sequence,
    use :class:`lena.output.ToCSV`.
    """
    rows = []
    for point in self:
        coord_str = str(point[0]).replace(" ", "")
        coord_parts = coord_str.split(separator)
        value_str = ""
        for val in point[1]:
            val_str = str(val).replace(" ", "")
            value_str += val_str.split(separator)[0]
            if len(val_str) > len(val_str.split(separator)[0]):
                value_str += separator.join(val_str.split(separator)[1:])
        rows.append(coord_parts + [value_str])
    
    if header is not None:
        rows.insert(0, [header] + ["\n"] + [""] * len(rows[0]))
    return None

if __name__ == "__main__":
    import doctest
    doctest.testmod()
```