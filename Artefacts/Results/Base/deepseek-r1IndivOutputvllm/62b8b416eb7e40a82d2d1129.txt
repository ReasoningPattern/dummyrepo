

To generate the Python code based on the given function signature and docstring, we need to create a method that returns the attribute names of the current class. The method should handle an optional parameter `all` which, when set to `True`, includes attributes from all parent classes, and when `False`, returns only the attributes of the current class.

Here's the code:

```python
def names(self, all=False):
    """
    Return the attribute names of current class.
    """
    if all:
        attributes = set()
        for cls in type(self).__mro__:
            attributes.update(cls.__dict__.keys())
        return list(attributes)
    else:
        return list(self.__dict__.keys())
```