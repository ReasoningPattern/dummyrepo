

```python
def cachedmethod(cache, key=hashkey, lock=None):
    def decorator(func):
        def wrapped(*args, **kwargs):
            k = key(*args, **kwargs)
            if lock is not None:
                with lock:
                    if k in cache:
                        return cache[k]
                    result = func(*args, **kwargs)
                    cache[k] = result
                    return result
            else:
                if k in cache:
                    return cache[k]
                result = func(*args, **kwargs)
                cache[k] = result
                return result
        return wrapped
    return decorator
```