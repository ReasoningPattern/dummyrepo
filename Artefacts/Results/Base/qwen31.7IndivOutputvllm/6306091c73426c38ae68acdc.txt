

```python
import yaml

class IRValidator:
    @classmethod
    def validate_from_content(cls, spec_content=None):
        """validates that spec (YAML) content has all required fields

        :param spec_content: content of spec file
        :raise IRValidatorException: when mandatory data is missing in spec file
        :return: Dictionary with data loaded from a spec (YAML) file
        """
        if spec_content is None:
            raise ValueError("spec_content is required")
        try:
            data = yaml.safe_load(spec_content)
        except yaml.YAMLError as e:
            raise IRValidatorException(f"YAML parsing error: {e}")
        # Example required fields (these should be replaced with actual required fields)
        required_fields = ['spec', 'version', 'parameters']
        for field in required_fields:
            if field not in data:
                raise IRValidatorException(f"Missing required field: {field}")
        return data
```