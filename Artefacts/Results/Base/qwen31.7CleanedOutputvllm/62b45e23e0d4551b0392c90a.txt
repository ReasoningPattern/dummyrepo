import os

def validate_version_inventories(self, version_dirs):
    """
    Each version SHOULD have an inventory up to that point.

    Also keep a record of any content digests different from those in the root inventory
    so that we can also check them when validating the content.

    version_dirs is an array of version directory names and is assumed to be in
    version sequence (1, 2, 3...).
    """
    discrepancies = []
    for version in version_dirs:
        if not os.path.exists(version):
            discrepancies.append(f"Version {version} does not exist")
        # Compare content digests with root inventory
        # Assume root_inventory is a dictionary
        # For example, root_inventory = {'version1': 'digest1', ...}
        # If root_inventory has the version, check if the digest matches
        # For the purpose of this code, we'll assume that get_content_digest(version) returns the digest
        # and root_inventory is a dictionary
        current_digest = get_content_digest(version)
        root_digest = root_inventory.get(version, None)
        if current_digest != root_digest:
            discrepancies.append(f"Version {version} has different digest than root inventory")
    return discrepancies