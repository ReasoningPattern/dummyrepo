Okay, I need to generate Python code based on the given function signature and docstring. The function is called _get_conditionally_required_args and it's supposed to list arguments that meet a certain condition. Let me break down the problem.

First, looking at the parameters: command_name is the name of the command, options_spec is a list of command spec options, and args is the received input arguments. The function should return a list of argument names where the required_when condition is matched.

I remember that in Python, you can use inspect module functions to get argument information. Maybe inspect.getfullargspec could be useful here because it provides details about the arguments of a function. The arguments parameter would then contain all the positional arguments, including defaults.

So, I'll import inspect. Then, I'll call getfullargspec on the command_name function, which gives me args_info. From this, I can extract the arguments as args_list.

Next, I need to loop through each argument in args_list. For each argument, I'll check if it has a required_when condition. I'll look for an attribute like required_when in the argument's info. If it exists and is True, I'll add the argument name to the result list.

Putting it all together, I'll initialize an empty list, iterate over the arguments, check each condition, and collect the names. Finally, return this list.

I should make sure to handle cases where the required_when condition isn't met or doesn't exist. But since the problem states to return the list, I assume that's handled by just checking the condition and including the argument only if it's required.

So, the code will import inspect, get the argspec, extract the args, loop through each with their info, check the condition, and collect the names.
