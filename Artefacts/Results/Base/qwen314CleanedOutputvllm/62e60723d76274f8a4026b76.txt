@classmethod
def from_ticks(cls, ticks, tz=None):
    """
    Create a time from ticks (nanoseconds since midnight).

    :param ticks: nanoseconds since midnight
    :type ticks: int
    :param tz: optional timezone
    :type tz: datetime.tzinfo

    :rtype: Time

    :raises ValueError: if ticks is out of bounds
    (0 <= ticks < 86400000000000)
    """
    if not (0 <= ticks < 86400000000000):
        raise ValueError("ticks is out of bounds")
    ns_per_hour = 3600 * 10**9
    ns_per_minute = 60 * 10**9
    ns_per_second = 10**9
    hours = ticks // ns_per_hour
    remaining = ticks % ns_per_hour
    minutes = remaining // ns_per_minute
    remaining %= ns_per_minute
    seconds = remaining // ns_per_second
    nanoseconds = remaining % ns_per_second
    return cls(hours, minutes, seconds, nanoseconds, tz=tz)