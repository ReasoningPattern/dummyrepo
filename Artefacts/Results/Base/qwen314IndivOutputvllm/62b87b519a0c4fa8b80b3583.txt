

```python
def scale(self, other=None):
    """
    Get or set the scale of the graph.

    If *other* is ``None``, return the scale of this graph.

    If a numeric *other* is provided, rescale to that value.
    If the graph has unknown or zero scale,
    rescaling that will raise :exc:`~.LenaValueError`.

    To get meaningful results, graph's fields are used.
    Only the last coordinate is rescaled.
    For example, if the graph has *x* and *y* coordinates,
    then *y* will be rescaled, and for a 3-dimensional graph
    *z* will be rescaled.
    All errors are rescaled together with their coordinate.
    """
    if other is None:
        return self._scale
    if self._scale is None or self._scale == 0:
        raise LenaValueError("unknown or zero scale")
    if not hasattr(self, '_coordinates') or not self._coordinates:
        raise LenaValueError("no coordinates to rescale")
    scale_factor = other / self._scale
    self._coordinates[-1] *= scale_factor
    if hasattr(self, '_errors') and self._errors:
        self._errors[-1] *= scale_factor
    self._scale = other
```