

```python
import yaml
from .exceptions import IRValidatorException

class SpecValidator:
    REQUIRED_FIELDS = ['required_field1', 'required_field2']

    @classmethod
    def validate_from_content(cls, spec_content=None):
        """
        validates that spec (YAML) content has all required fields

        :param spec_content: content of spec file
        :raise IRValidatorException: when mandatory data
        is missing in spec file
        :return: Dictionary with data loaded from a spec (YAML) file
        """
        if spec_content is None:
            raise IRValidatorException("Spec content cannot be None")
        data = yaml.safe_load(spec_content)
        if not data:
            raise IRValidatorException("Failed to parse spec content")
        for field in cls.REQUIRED_FIELDS:
            if field not in data:
                raise IRValidatorException(f"Missing required field: {field}")
        return data
```