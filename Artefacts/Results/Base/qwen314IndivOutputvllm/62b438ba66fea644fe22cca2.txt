

```python
def deep_merge_nodes(nodes):
    """
    merge any node values corresponding to duplicate keys and return the result. If there are colliding keys with non-MappingNode values, the last of the values remains.
    """
    def merge_dicts(d1, d2):
        merged = d1.copy()
        for k, v in d2.items():
            if k in merged and isinstance(merged[k], dict) and isinstance(v, dict):
                merged[k] = merge_dicts(merged[k], v)
            else:
                merged[k] = v
        return merged

    result = {}
    for node in nodes:
        key = node.key
        value = node.value
        if key in result:
            existing = result[key]
            if isinstance(existing, dict) and isinstance(value, dict):
                result[key] = merge_dicts(existing, value)
            else:
                result[key] = value
        else:
            result[key] = value
    return result
```