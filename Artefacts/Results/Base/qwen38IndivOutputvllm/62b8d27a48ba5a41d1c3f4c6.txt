

```python
def hashkey(func, *args, **kwargs):
    return (func.__name__, args, kwargs)

def cached(cache, key=hashkey, lock=None):
    """
    Returns a decorator function that saves the results in the cache
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            key_value = key(func, *args, **kwargs)
            if key_value in cache:
                return cache[key_value]
            if lock is not None:
                with lock:
                    if key_value not in cache:
                        result = func(*args, **kwargs)
                        cache[key_value] = result
            else:
                result = func(*args, **kwargs)
                cache[key_value] = result
            return result
        return wrapper
    return decorator
```