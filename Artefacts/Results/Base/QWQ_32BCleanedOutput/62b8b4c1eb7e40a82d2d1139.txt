import abc
import inspect

def verifyClass(iface, candidate, tentative=False):
    if not tentative:
        return issubclass(candidate, iface)
    else:
        required = set()
        if isinstance(iface, abc.ABCMeta):
            required = set(iface.__abstractmethods__)
        else:
            for name, val in iface.__dict__.items():
                if not name.startswith('__') and inspect.isroutine(val):
                    required.add(name)
        for method in required:
            if not hasattr(candidate, method):
                return False
            candidate_attr = getattr(candidate, method)
            if not inspect.isroutine(candidate_attr):
                return False
        return True