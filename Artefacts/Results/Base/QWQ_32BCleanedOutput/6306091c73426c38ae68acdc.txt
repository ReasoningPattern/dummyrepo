import yaml

class IRValidatorException(Exception):
    pass

class SpecValidator:
    REQUIRED_FIELDS = []

    @classmethod
    def validate_from_content(cls, spec_content=None):
        """
        validates that spec (YAML) content has all required fields

        :param spec_content: content of spec file
        :raise IRValidatorException: when mandatory data
        is missing in spec file
        :return: Dictionary with data loaded from a spec (YAML) file
        """
        if spec_content is None:
            raise IRValidatorException("Spec content must be provided")
        data = yaml.safe_load(spec_content)
        missing = []
        for field in cls.REQUIRED_FIELDS:
            if field not in data:
                missing.append(field)
        if missing:
            raise IRValidatorException(f"Missing required fields: {', '.join(missing)}")
        return data