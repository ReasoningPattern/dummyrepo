def hist_to_graph(hist, make_value=None, get_coordinate="left", field_names=("x", "y"), scale=None):
    if get_coordinate not in ["left", "right", "middle"]:
        raise ValueError("get_coordinate must be 'left', 'right', or 'middle'")
    edges = hist.edges
    contents = hist.contents
    if get_coordinate == "left":
        x_coords = edges[:-1]
    elif get_coordinate == "right":
        x_coords = edges[1:]
    else:  # middle
        x_coords = [(edges[i] + edges[i+1])/2 for i in range(len(edges)-1)]
    if make_value is None:
        make_value = lambda content: content
    points = []
    for x, content in zip(x_coords, contents):
        value = make_value(content)
        if len(field_names) != len(value) + 1:
            raise ValueError("field_names must have the same length as the number of values returned by make_value plus 1 for the x coordinate.")
        point = {field_names[0]: x}
        for name, val in zip(field_names[1:], value):
            point[name] = val
        points.append(point)
    if scale is True:
        scale = hist.scale
    elif scale is None:
        scale = hist.scale
    return points, scale