def create_complex_argumet_type(self, subcommand, type_name, option_name, spec_option):
    """
    Returns the corresponding function in COMPLEX_TYPES based on type_name and returns the result obtained by complex_action after option_name,(self.vars, self.defaults, self.plugin_path), subcommand, spec_option) is input.
    """
    func = COMPLEX_TYPES.get(type_name)
    if func is None:
        raise KeyError(f"Type {type_name} not found in COMPLEX_TYPES")
    return func(option_name, self.vars, self.defaults, self.plugin_path, subcommand, spec_option)