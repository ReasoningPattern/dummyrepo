import os
import yaml

def get_plugin_spec_flatten_dict(plugin_dir):
    """
    Use YAML to read various information in plugin_dir and return the information in dictionary form.
    """
    if not os.path.isdir(plugin_dir):
        raise NotADirectoryError(f"{plugin_dir} is not a valid directory")
    
    def flatten(d, parent_key='', sep='.'):
        items = []
        for k, v in d.items():
            new_key = f"{parent_key}{sep}{k}" if parent_key else k
            if isinstance(v, dict):
                items.extend(flatten(v, new_key, sep).items())
            else:
                items.append((new_key, v))
        return dict(items)
    
    merged_data = {}
    for filename in os.listdir(plugin_dir):
        if filename.endswith(('.yaml', '.yml')):
            with open(os.path.join(plugin_dir, filename), 'r') as f:
                file_data = yaml.safe_load(f)
                if file_data is not None:
                    flat_data = flatten(file_data)
                    merged_data.update(flat_data)
    return merged_data