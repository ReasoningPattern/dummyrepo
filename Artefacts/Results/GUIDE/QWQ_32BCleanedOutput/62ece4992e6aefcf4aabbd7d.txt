import subprocess
import os

def subprocess_run_helper(func, *args, timeout, extra_env=None):
    """
    Run a function in a sub-process

    Args:
            func: function, the function to be run. It must be in a module that is importable.
            *args: str. Any additional command line arguments to be passed in
                        the first argument to ``subprocess.run``.
            extra_env: dict[str, str]. Any additional environment variables to be set for the subprocess.
    Returns:
            CompletedProcess instance
    """
    mod_name = func.__module__
    func_name = func.__name__
    code_str = (
        "import sys; from importlib import import_module; "
        "mod, func = sys.argv[1], sys.argv[2]; "
        "args = sys.argv[3:]; "
        "getattr(import_module(mod), func)(*args)"
    )
    cmd = [
        "python",
        "-c",
        code_str,
        mod_name,
        func_name,
    ] + list(args)
    env = os.environ.copy()
    if extra_env:
        env.update(extra_env)
    result = subprocess.run(
        cmd,
        timeout=timeout,
        capture_output=True,
        text=True,
        env=env,
    )
    return result