import unittest
from unittest.mock import patch
from datetime import datetime, timezone, timedelta

class TestFormatDT(unittest.TestCase):
    @patch('__main__.ensure_timezone')
    def test_naive_datetime(self, mock_ensure):
        dt = datetime(2023, 10, 5, 14, 30)
        mock_ensure.return_value = datetime(2023, 10, 5, 14, 30, tzinfo=timezone.utc)
        result = format_dt(dt)
        mock_ensure.assert_called_once_with(dt)
        self.assertEqual(result, "14:30:00+0000")

    @patch('__main__.ensure_timezone')
    def test_aware_datetime(self, mock_ensure):
        dt = datetime(2023, 10, 5, 15, 45, tzinfo=timezone(timedelta(hours=-5)))
        mock_ensure.return_value = dt
        result = format_dt(dt)
        mock_ensure.assert_called_once_with(dt)
        self.assertEqual(result, "15:45:00-0500")

def format_dt(dt):
    dt_aware = ensure_timezone(dt)
    return dt_aware.strftime("%H:%M:%S%z")