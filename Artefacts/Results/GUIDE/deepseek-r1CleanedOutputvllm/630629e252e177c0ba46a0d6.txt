import unittest
import requests
from .models import XRD

class TestRetrieveDiasporaHostMeta(unittest.TestCase):
    def setUp(self):
        self.host = "dummy.host"
        self.xrd_data = {
            "host_id": "123",
            "name": "Diaspora",
            "version": "2.3.4",
            "created_at": "2023-01-01",
            "modified_at": "2023-01-01"
        }
        self.api_response = requests.Response()
        self.api_response.status_code = 200
        self.api_response.json() = self.xrd_data

    def test_retrieve_diaspora_host_meta(self):
        with self.mocked('requests.get') as mock_get:
            mock_get.return_value = self.api_response
            result = retrieve_diaspora_host_meta(self.host)
            self.assertIsInstance(result, XRD)
            self.assertEqual(result.host_id, self.xrd_data['host_id'])
            self.assertEqual(result.name, self.xrd_data['name'])
            self.assertEqual(result.version, self.xrd_data['version'])
            self.assertEqual(result.created_at, self.xrd_data['created_at'])
            self.assertEqual(result.modified_at, self.xrd_data['modified_at'])

if __name__ == '__main__':
    unittest.main()