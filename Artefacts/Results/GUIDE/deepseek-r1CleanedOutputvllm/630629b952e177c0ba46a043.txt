import unittest
from unittest.mock import patch

def get_nodeinfo_well_known_document(url, document_path=None):
    """
    Returns a formatted dictionary, including information such as url and document_path.
    
    Args:
        url (str): The URL of the document
        document_path (str, optional): The path of the document. Defaults to None.
        
    Returns:
        dict: A dictionary containing url, document_path, version, node_name, and node_type
    """
    # Create a mock document information
    document_info = {
        "url": url,
        "document_path": document_path,
        "version": "2.3.4",
        "node_name": "example-node",
        "node_type": "server"
    }
    
    # Return the mocked document information
    return document_info

class TestGetNodeInfo(unittest.TestCase):
    def test_get_nodeinfo_with Default.DocumentPath(self):
        # Setup
        mock_url = "https://example.com"
        
        with patch('get_nodeinfo_well_known_document') as mock:
            result = get_nodeinfo_well_known_document(mock_url)
            
        # Verify
        self.assertEqual(result, {
            "url": "https://example.com",
            "document_path": None,
            "version": "2.3.4",
            "node_name": "example-node",
            "node_type": "server"
        })
    
    def test_get_nodeinfo_with_Empty.DocumentPath(self):
        # Setup
        mock_url = "https://example.com"
        mock_document_path = ""
        
        with patch('get_nodeinfo_well_known_document') as mock:
            result = get_nodeinfo_well_known_document(mock_url, mock_document_path)
            
        # Verify
        self.assertEqual(result, {
            "url": "https://example.com",
            "document_path": "",
            "version": "2.3.4",
            "node_name": "example-node",
            "node_type": "server"
        })
    
    def test_get_nodeinfo_with_Valid.DocumentPath(self):
        # Setup
        mock_url = "https://example.com"
        mock_document_path = "/path/to/document.html"
        
        with patch('get_nodeinfo_well_known_document') as mock:
            result = get_nodeinfo_well_known_document(mock_url, mock_document_path)
            
        # Verify
        self.assertEqual(result, {
            "url": "https://example.com",
            "document_path": "/path/to/document.html",
            "version": "2.3.4",
            "node_name": "example-node",
            "node_type": "server"
        })

if __name__ == "__main__":
    unittest.main()