import unittest
from unittest.mock import Mock, patch

class TestGetErrorIndices(unittest.TestCase):
    @patch('self.errors', return_value=[])
    def test_get_err_indices_no_errors(self, mock_self_errors):
        result = self._get_err_indices("test_coord")
        self.assertEqual(result, [])

    @patch('self.errors', return_value=[{"coord_name": "test_coord", "indices": [0, 1]}])
    def test_get_err_indices_multiple_errors(self, mock_self_errors):
        result = self._get_err_indices("test_coord")
        self.assertEqual(result, [0, 1])

    @patch('self.errors', return_value=[{"coord_name": "nonexistent", "indices": [0, 1]}])
    def test_get_err_indices_nonexistent_coord(self, mock_self_errors):
        result = self._get_err_indices("test_coord")
        self.assertEqual(result, [])

    @patch('self.errors', return_value=[{"coord_name": None, "indices": [0, 1]}])
    def test_get_err_indices_none_coord_name(self, mock_self_errors):
        result = self._get_err_indices("test_coord")
        self.assertEqual(result, [])

    @patch('self.errors', return_value=[{"coord_name": "test_coord", "indices": [2]}])
    def test_get_err_indices_single_error(self, mock_self_errors):
        result = self._get_err_indices("test_coord")
        self.assertEqual(result, [2])

    def _get_err_indices(self, coord_name):
        """
        Find all error indexes corresponding to coord_name.
        """
        indices = []
        for error in self.errors:
            if 'coord_name' in error and error['coord_name'] == coord_name:
                indices.extend(error['indices'])
        return indices