from datetime import datetime, timezone

def hydrate_time(nanoseconds, tz=None):
    """
    Convert nanoseconds to a datetime object, optionally localized to a specified timezone.
    
    Args:
        nanoseconds (int): The time in nanoseconds.
        tz (str | None): The timezone to localize the datetime to. If None, the system's default timezone is used.
        
    Returns:
        datetime: A datetime object representing the given time.
    """
    # Convert nanoseconds to seconds
    timestamp = nanoseconds / 1e9
    # Create a naive datetime from the timestamp
    dt = datetime.fromtimestamp(timestamp)
    # Localize to the specified timezone if provided
    if tz is not None:
        if isinstance(tz, str):
            dt = dt.replace(tzinfo=timezone(tz))
        elif isinstance(tz, datetime.timezone):
            dt = dt.replace(tzinfo=timezone(tz))
        else:
            raise ValueError("tz must be a string or a datetime.timezone object")
    return dt