import unittest

class VersioneerConfig:
    """
    A configuration class for handling Ansible version constraints.
    """
    
    def __init__(self):
        self._min_version = '2.4'
        self._max_version = '3.0'
        self._state = 'present'

    @property
    def min_version(self):
        return self._min_version

    @property
    def max_version(self):
        return self._max_version

    @property
    def state(self):
        return self._state

def get_config():
    """
    Return a new VersioneerConfig() and set various attribute of it.
    """
    config = VersioneerConfig()
    config.min_version = '2.4'
    config.max_version = '3.0'
    config.state = 'present'
    return config

class TestVersioneerConfig(unittest.TestCase):
    def test_versioneer_config(self):
        config = get_config()
        
        self.assertIsInstance(config, VersioneerConfig)
        self.assertEqual(config.min_version, '2.4')
        self.assertEqual(config.max_version, '3.0')
        self.assertEqual(config.state, 'present')
        
if __name__ == '__main__':
    unittest.main()