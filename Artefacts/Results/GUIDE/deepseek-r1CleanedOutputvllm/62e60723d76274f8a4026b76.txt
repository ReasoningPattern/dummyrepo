import datetime

def from_ticks(cls, ticks, tz=None):
    """
    Create a time object from ticks (nanoseconds since midnight).

    Parameters:
    :param ticks: nanoseconds since midnight
    :type ticks: int
    :param tz: optional timezone
    :type tz: datetime.timezone or None
    
    :rtype: Time
    """
    if not isinstance(ticks, int):
        raise TypeError("ticks must be an integer")
    if ticks < 0 or ticks >= 86400000000000:
        raise ValueError("ticks out of bounds")
    
    total_nanos = ticks
    hours = total_nanos // 3600000000000
    remaining_nanos = total_nanos % 3600000000000
    minutes = remaining_nanos // 60000000000
    remaining_nanos %= 60000000000
    seconds = remaining_nanos // 1000000000
    remaining_nanos %= 1000000000
    microseconds = remaining_nanos // 1000000
    remaining_nanos %= 1000000
    
    if tz is not None:
        dt = datetime.datetime(
            year=0, month=1, day=1,
            hour=hours, minute=minutes, second=seconds, microsecond=microseconds,
            tzinfo=tz
        )
    else:
        dt = datetime.datetime(
            year=0, month=1, day=1,
            hour=hours, minute=minutes, second=seconds, microsecond=microseconds
        )
    
    return dt.time()