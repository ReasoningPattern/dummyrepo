def find_roots(graph: "Graph", prop: "URIRef", roots: Optional[Set["Node"]] = None) -> Set["Node"]:
    """
    Find the roots in the graph based on the given property.

    Parameters:
        graph: The graph object containing triples.
        prop: The property to look for, indicating the direction of hierarchy.
        roots: Optional set of nodes to consider as potential roots.

    Returns:
        A set of nodes that are roots, i.e., nodes with no incoming edges via the property.
    """
    if roots is None:
        roots_set = set()
        for node in graph.nodes():
            if not any(triple[2] == node for triple in graph if triple[1] == prop):
                roots_set.add(node)
        return roots_set
    else:
        valid_roots = set()
        for root in roots:
            if not any(triple[2] == root for triple in graph if triple[1] == prop):
                valid_roots.add(root)
        return valid_roots