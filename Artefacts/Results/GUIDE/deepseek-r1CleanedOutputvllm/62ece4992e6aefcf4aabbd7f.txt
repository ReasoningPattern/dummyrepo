from urllib.parse import urlparse, parse_qs

def _parse_image_ref(image_href: str) -> Tuple[str, str, bool]:
    """
    Parse an image reference URL into composite parts.

    :param image_href: href of an image
    :returns: a tuple of the form (image_id, netloc, use_ssl)
    :raises ValueError:
    """
    try:
        parsed_url = urlparse(image_href)
        netloc = parsed_url.netloc
        scheme = parsed_url.scheme
        
        use_ssl = False if scheme == 'http' else True
        
        query_params = parse_qs(parsed_url.query)
        image_id = next((v[0] for k, v in query_params.items() if k == 'image_id'), None)
        
        if image_id is None:
            raise ValueError("Image ID not found in the query parameters.")
        
        return (image_id, netloc, use_ssl)
    except ValueError as e:
        raise ValueError(f"Invalid image reference URL: {e}")