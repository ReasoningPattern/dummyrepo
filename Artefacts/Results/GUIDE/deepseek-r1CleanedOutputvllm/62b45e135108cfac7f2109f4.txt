def is_valid(identifier):
    """
    Return True if identifier is valid. In this base implementation, always return True.  (D)
    """
    return True

# Test cases
test_cases = [
    ("a", True),  # Valid identifier
    ("123abc", False),  # Starts with a number
    ("_var", False),  # Contains only underscores
    ("var__", False),  # Contains only underscores
    ("var123", False),  # Has a number in the middle
    ("123var", False),  # Ends with a number
    ("var_123", False),  # Has only underscores
    ("var1_var", False),  # Has both numbers and letters
    ("Long living long long long long long longlonglonglonglonglonglonglonglonglonglonglonglonglonglong", False)
]

print("Testing is_valid function:")
for identifier, expected in test_cases:
    result = is_valid(identifier)
    print(f"Testing {repr(identifier)}: {'True' if result else 'False'} (expected: {expected})"