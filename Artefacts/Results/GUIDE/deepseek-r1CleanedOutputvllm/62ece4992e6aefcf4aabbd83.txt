import subprocess
import logging

def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False, env=None):
    """
    Execute a list of commands and return the combined stdout and return code.
    
    Args:
        commands (str or list): List of commands to execute, or a single command string.
        args (list): Arguments to pass to each command.
        cwd (str, optional): Working directory. Defaults to None, which uses the current directory.
        verbose (bool, optional): If True, print the commands being executed. Defaults to False.
        hide_stderr (bool, optional): If True, suppress standard error output. Defaults to False.
        env (dict, optional): Environment variables to pass to the commands. Defaults to None.
        
    Returns:
        tuple: (str, int) containing combined stdout and return code of the last command.
    """
    if commands is None:
        commands = []
    elif isinstance(commands, str):
        commands = commands.split(';')
    else:
        commands = commands if commands else []
    
    combined_output = ''
    
    for cmd in commands:
        if verbose:
            logging.info(f"Running command: {cmd}")
        
        result = subprocess.run(
            cmd,
            shell=True,
            args=args,
            cwd=cwd,
            env=env,
            capture_output=True,
            text=True
        )
        
        if not hide_stderr:
            combined_output += result.stdout
        
        return_code = result.returncode
    
    return combined_output, return_code