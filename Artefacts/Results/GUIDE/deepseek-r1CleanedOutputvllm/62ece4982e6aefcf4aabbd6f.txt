from pathlib import Path
import requests
import tarfile

def get_repo_archive(url: str, destination_path: Path) -> Path:
    """
    Given an url and a destination path, retrieve and extract .tar.gz archive which contains 'desc' file for each package

    Args:
        url: url of the .tar.gz archive to download
        destination_path: the path on disk where to extract archive

    Returns:
        Path: the path where the archive is extracted to
    """
    # Create the destination directory if it doesn't exist
    destination_path.parent.mkdir(parents=True, exist_ok=True)
    
    # Attempt to download the archive
    response = requests.get(url, stream=True)
    if not response.ok:
        raise ValueError(f"Failed to download {url}. Status code: {response.status_code}")
    
    # Extract the archive
    with tarfile.open(response.content, mode='r|*gz') as archive:
        try:
            archive.extract to destination_path
        except Exception as e:
            raise RuntimeError(f"Failed to extract archive from {url}. Error: {str(e)}")
    
    return destination_path