from validators import validate_key, validate_value

def _validate_labels(labels):
    """
    Check that keys and values in the given labels by validate_key() and validate_value().
    """
    if labels is None:
        return None
    
    for key, value in labels.items():
        if not validate_key(key):
            raise ValueError(f"Invalid key '{key}'.")
        if not validate_value(value):
            raise ValueError(f"Invalid value '{value}'.")
    
    return None

def test_validate_labels():
    import pytest

    # Test case 1: Valid labels
    valid_labels = {'a': 1, 'b': 2}
    _validate_labels(valid_labels)
    
    # Test case 2: Key validation fails
    invalid_key_labels = {'invalid_key': 1}
    with pytest.raises(ValueError):
        _validate_labels(invalid_key_labels)
    
    # Test case 3: Value validation fails
    valid_value_labels = {'a': 0}
    with pytest.raises(ValueError):
        _validate_labels(valid_value_labels)
    
    # Test case 4: Empty labels
    empty_labels = {}
    _validate_labels(empty_labels)
    
    # Test case 5: None input
    _validate_labels(None)
    
    # Test case 6: Key is None
    invalid_key_none = {None: 1}
    with pytest.raises(ValueError):
        _validate_labels(invalid_key_none)
    
    # Test case 7: Value is None
    invalid_value_none = {1: None}
    with pytest.raises(ValueError):
        _validate_labels(invalid_value_none)