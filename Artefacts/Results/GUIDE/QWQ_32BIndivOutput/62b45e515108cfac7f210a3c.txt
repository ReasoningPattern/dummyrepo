

```python
import os
import json
import hashlib
from datetime import datetime

class OCFLStorageRoot:
    def __init__(self, root_path):
        self.root_path = root_path

    def initialize(self):
        """Create and initialize a new OCFL storage root."""
        if os.path.exists(self.root_path):
            raise FileExistsError(f"Storage root {self.root_path} already exists")
        # Create root directory
        os.makedirs(self.root_path)
        # Create subdirectories
        inventory_dir = os.path.join(self.root_path, 'inventory')
        versions_dir = os.path.join(self.root_path, 'versions')
        os.makedirs(inventory_dir)
        os.makedirs(versions_dir)
        # Create .ocfl_layout file
        with open(os.path.join(self.root_path, '.ocfl_layout'), 'w') as f:
            f.write('object')
        # Create initial inventory version 0
        initial_inventory_dir = os.path.join(inventory_dir, '0')
        os.makedirs(initial_inventory_dir)
        # Write contents.json
        inventory_file_path = os.path.join(initial_inventory_dir, 'contents.json')
        initial_inventory = {
            "type": "inventory",
            "version": 0,
            "created": datetime.now().isoformat(),
            "digestAlgorithm": "sha-512",
            "objects": {}
        }
        with open(inventory_file_path, 'w') as f:
            json.dump(initial_inventory, f, indent=2)
        # Compute digest of contents.json and create digest file
        with open(inventory_file_path, 'rb') as f:
            content = f.read()
        digest = hashlib.sha512(content).hexdigest()
        digest_file_path = os.path.join(initial_inventory_dir, 'digest')
        with open(digest_file_path, 'w') as f:
            f.write(f"sha-512:{digest}\n")
```