

```python
def parse_subparser_arguments(unparsed_arguments, subparsers):
    """
    Given a sequence of arguments and a dict from subparser name to argparse.ArgumentParser
    instance, give each requested action's subparser a shot at parsing all arguments. This allows
    common arguments like "--repository" to be shared across multiple subparsers.

    Return the result as a tuple of (a dict mapping from subparser name to a parsed namespace of
    arguments, a list of remaining arguments not claimed by any subparser).
    """
    namespaces = {}
    unknowns = []
    for name, parser in subparsers.items():
        namespace, unknown = parser.parse_known_args(unparsed_arguments)
        namespaces[name] = namespace
        unknowns.append(unknown)
    
    unknown_sets = [set(unk) for unk in unknowns]
    remaining = []
    for arg in unparsed_arguments:
        if all(arg in s for s in unknown_sets):
            remaining.append(arg)
    
    return namespaces, remaining
```