

```python
import unittest
import tempfile
import os

class TestFileToTextBuffer(unittest.TestCase):
    def test_valid_file(self):
        content = "Hello, test file!"
        with tempfile.NamedTemporaryFile('w', encoding='utf-8', delete=False) as f:
            f.write(content)
            temp_filename = f.name
        result = file_to_textbuffer(temp_filename, 'utf-8')
        self.assertEqual(result, content)
        os.remove(temp_filename)

    def test_nonexistent_file(self):
        with self.assertRaises(FileNotFoundError):
            file_to_textbuffer('nonexistent.txt', 'utf-8')

    def test_invalid_encoding(self):
        test_text = 'ÖÄÜ'  # Non-ASCII characters
        with tempfile.NamedTemporaryFile('w', encoding='utf-8', delete=False) as f:
            f.write(test_text)
            temp_filename = f.name
        with self.assertRaises(UnicodeDecodeError):
            file_to_textbuffer(temp_filename, 'ascii')
        os.remove(temp_filename)

def file_to_textbuffer(file_name, encoding):
    with open(file_name, 'r', encoding=encoding) as f:
        return f.read()

if __name__ == '__main__':
    unittest.main()
```