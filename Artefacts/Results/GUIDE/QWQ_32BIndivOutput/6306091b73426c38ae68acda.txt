

```python
# tests/test_plugins_manager.py
import unittest
from unittest.mock import patch, MagicMock
from your_module import YourClass, ServiceName

class TestPluginsManager(unittest.TestCase):
    def test_plugins_manager_calls_get_service(self):
        expected_service = MagicMock()
        with patch.object(YourClass, '_get_service', return_value=expected_service) as mock_get_service:
            result = YourClass.plugins_manager()
        
        mock_get_service.assert_called_once_with(ServiceName.PLUGINS_MANAGER)
        self.assertIs(result, expected_service)
```

```python
class YourClass:
    @classmethod
    def plugins_manager(cls):
        """
        Gets the plugin manager via ServiceName.PLUGINS_MANAGER in cls._get_service()
        """
        return cls._get_service(ServiceName.PLUGINS_MANAGER)
```