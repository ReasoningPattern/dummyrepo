

```python
def get_nodeinfo_well_known_document(url, document_path=None):
    """
    Returns a formatted dictionary, including information such as url and document_path.
    """
    if document_path is None:
        document_path = "/.well-known/nodeinfo"
    return {
        "url": url,
        "document_path": document_path,
    }

import unittest

class TestGetNodeinfoWellKnownDocument(unittest.TestCase):
    def test_with_document_path(self):
        url = "https://example.com"
        path = "/custom/path"
        expected = {"url": url, "document_path": path}
        self.assertEqual(
            get_nodeinfo_well_known_document(url, path),
            expected
        )

    def test_without_document_path(self):
        url = "https://example.com"
        expected_path = "/.well-known/nodeinfo"
        expected = {"url": url, "document_path": expected_path}
        self.assertEqual(
            get_nodeinfo_wwell_known_document(url),
            expected
        )

if __name__ == "__main__":
    unittest.main()
```

Wait, there's a typo in the test name. The test_without_document_path calls get_nodeinfo_wwell_known_document which has a typo (missing 'e'). Let me correct that.

Also, in the function call in the test, it should be get_nodeinfo_well_known_document.

Corrected version:

```python
def get_nodeinfo_well_known_document(url, document_path=None):
    """
    Returns a formatted dictionary, including information such as url and document_path.
    """
    if document_path is None:
        document_path = "/.well-known/nodeinfo"
    return {
        "url": url,
        "document_path": document_path,
    }

import unittest

class TestGetNodeinfoWellKnownDocument(unittest.TestCase):
    def test_with_document_path(self):
        url = "https://example.com"
        path = "/custom/path"
        expected = {"url": url, "document_path": path}
        self.assertEqual(
            get_nodeinfo_well_known_document(url, path),
            expected
        )

    def test_without_document_path(self):
        url = "https://example.com"
        expected_path = "/.well-known/nodeinfo"
        expected = {"url": url, "document_path": expected_path}
        self.assertEqual(
            get_nodeinfo_well_known_document(url),
            expected
        )

if __name__ == "__main__":
    unittest.main()
```