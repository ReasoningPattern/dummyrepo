

```python
import argparse

def parse_arguments(*arguments):
    """
    Given command-line arguments with which this script was invoked, parse the arguments and return them as an ArgumentParser instance
    """
    parser = argparse.ArgumentParser()
    parser.parse_args(arguments)
    return parser
```

```python
import unittest
from unittest.mock import patch
import argparse

class TestParseArguments(unittest.TestCase):
    @patch('argparse.ArgumentParser.parse_args')
    def test_returns_parser(self, mock_parse):
        args = ["--test"]
        parser = parse_arguments(*args)
        self.assertIsInstance(parser, argparse.ArgumentParser)
        mock_parse.assert_called_once_with(args)

    def test_no_arguments(self):
        parser = parse_arguments()
        self.assertIsInstance(parser, argparse.ArgumentParser)

    @patch('argparse.ArgumentParser.parse_args')
    def test_calls_parse_args_correctly(self, mock_parse):
        test_args = ["arg1", "arg2"]
        parse_arguments(*test_args)
        mock_parse.assert_called_once_with(test_args)
```