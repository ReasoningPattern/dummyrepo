

To solve this problem, we need to determine whether a given object's class has a method named `run`. This can be achieved by checking the attributes of the class directly.

### Approach
The approach involves the following steps:
1. **Determine the Class**: For the given object, determine its class using `type(obj)`.
2. **Check for Method Existence**: Use the `hasattr()` function to check if the class has an attribute named `run`.

The `hasattr()` function is suitable for this task as it checks if a class or any object has an attribute. This function will return `True` if the class has the `run` method, and `False` otherwise.

### Solution Code
```python
def is_run_el(obj):
    """
    Check whether the obj's class has the run method.
    """
    return hasattr(type(obj), 'run')
```

### Explanation
- **Determine the Class**: The function starts by determining the class of the given object using `type(obj)`. This works whether the object is an instance of a class or the class itself.
- **Check for Method Existence**: The function then uses `hasattr()` to check if the class has the `run` method. If the method exists, `hasattr()` returns `True`; otherwise, it returns `False`.

This approach efficiently checks for the presence of the `run` method in the class of the given object, ensuring that both instances and classes are handled correctly.