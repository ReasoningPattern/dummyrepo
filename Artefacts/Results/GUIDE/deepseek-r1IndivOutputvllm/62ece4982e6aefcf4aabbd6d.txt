

To solve this problem, we need to write a function that converts a string into an integer based on a given alphabet. Each character in the string corresponds to a position in the alphabet, and the function calculates a number where each character represents a digit in a base equal to the length of the alphabet.

### Approach
The approach to solve this problem involves the following steps:

1. **Determine the Base**: The base for the conversion is the length of the given alphabet. This is because each character in the string can be mapped to a digit in this base.
2. **Iterate Through the String**: For each character in the string, find its index in the alphabet. This index represents the digit value for that character in the given base.
3. **Compute the Result**: Start with a result initialized to 0. For each character, update the result by multiplying the current result by the base and adding the index of the current character. This effectively treats the string as a number in the given base and converts it to an integer.

### Solution Code
```python
from typing import List

def string_to_int(string: str, alphabet: List[str]) -> int:
    """
    Convert a string to a number, using the given transition rule.
    
    :param string: a string consisting of letters in the given alphabet
    :param alphabet: list of letters representing the base
    :return: the corresponding integer based on the given alphabet
    """
    base = len(alphabet)
    result = 0
    for char in string:
        index = alphabet.index(char)
        result = result * base + index
    return result
```

### Explanation
- **Base Calculation**: The base is determined by the length of the alphabet list. For example, if the alphabet has 3 characters, each character can represent a digit from 0 to 2.
- **Index Mapping**: Each character in the string is mapped to its index in the alphabet. This index is used as the digit value in the base system.
- **Result Computation**: The result is computed by iterating over each character, updating the result using the formula `result = result * base + index`. This formula effectively shifts the current result left by one digit (multiplying by the base) and adds the new digit.

This approach ensures that the string is correctly converted into an integer based on the provided alphabet, treating it as a number in the given base.