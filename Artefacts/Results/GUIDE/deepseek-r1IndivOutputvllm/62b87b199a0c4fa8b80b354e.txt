

To solve this problem, we need to determine if a given sequence can be converted into a `FillRequestSeq` object. The function should return a boolean value indicating the validity of the sequence.

### Approach
The approach involves checking if the input sequence meets specific criteria:
1. The input must be an iterable. This means it should be possible to iterate over its elements.
2. The input must not be a string or bytes type, as these are not considered valid sequences for our purposes.

By ensuring these two conditions, we can determine if the input sequence is suitable for conversion into a `FillRequestSeq` object.

### Solution Code
```python
import collections.abc

def is_fill_request_seq(seq):
    """
    Check whether seq can be converted to FillRequestSeq and bool is returned.
    """
    return isinstance(seq, collections.abc.Iterable) and not isinstance(seq, (str, bytes))
```

### Explanation
- **Importing Iterable**: The `collections.abc.Iterable` is imported to check if the input is an iterable.
- **Type Check**: The function checks if `seq` is an instance of `Iterable` and ensures it is not a string or bytes type.
- **Return Value**: The function returns `True` if both conditions are met, indicating the sequence is valid for conversion. Otherwise, it returns `False`.

This approach efficiently determines the validity of the sequence using type checks, ensuring that only appropriate iterables are considered valid.