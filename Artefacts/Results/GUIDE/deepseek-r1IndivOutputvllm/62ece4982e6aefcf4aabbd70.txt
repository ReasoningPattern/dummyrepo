

To solve this problem, we need to determine if the current operating system is macOS. We will create a function that returns `True` if the system is macOS and `False` otherwise.

### Approach
The approach to solve this problem involves using Python's built-in `platform` module. This module provides information about the platform on which the Python program is running. Specifically, we can use the `platform.system()` method, which returns a string indicating the operating system. For macOS, this method will return `'MacOS'`.

Here's the step-by-step approach:
1. Import the `platform` module.
2. Use `platform.system()` to get the operating system name.
3. Check if the returned value is `'MacOS'`.
4. Return `True` if it is macOS, otherwise return `False`.

This approach is efficient and straightforward, leveraging Python's built-in capabilities to determine the operating system.

### Solution Code
```python
import platform

def os_is_mac():
    """
    Checks if the os is macOS

    :return: bool, True is macOS, otherwise False.
    """
    return platform.system() == 'MacOS'
```

### Explanation
- **Importing the Module**: We import the `platform` module to access system information.
- **Checking the OS**: We call `platform.system()` which returns a string like `'MacOS'` for macOS.
- **Returning the Result**: We compare the result of `platform.system()` with `'MacOS'` and return the boolean result of this comparison.

This solution is efficient and leverages Python's built-in capabilities to provide an accurate and clean implementation.