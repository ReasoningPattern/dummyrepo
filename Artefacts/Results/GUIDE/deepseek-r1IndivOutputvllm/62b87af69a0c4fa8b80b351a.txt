

To solve this problem, we need to determine if a given class has both the `fill` and `compute` methods. This can be achieved by checking the attributes of the class directly. 

### Approach
The approach involves the following steps:
1. **Understand the Problem**: We need to check if a given class (or its subclass) has both `fill` and `compute` methods.
2. **Use Type Checking**: Use the `type()` function to get the class of the provided object.
3. **Check for Methods**: Utilize the `hasattr()` function to check if the class has the required methods.

This approach ensures that we accurately determine the presence of the methods without relying on instance attributes, which might not exist.

### Solution Code

```python
def is_fill_compute_el(obj):
    cls = type(obj)
    return hasattr(cls, 'fill') and hasattr(cls, 'compute')
```

### Explanation
1. **Type Checking**: The function starts by determining the class of the provided object using `type(obj)`. This gives us the exact class we need to check for the methods.
2. **Method Presence Check**: Using `hasattr(cls, 'fill')` and `hasattr(cls, 'compute')`, the function checks if the class has the `fill` and `compute` methods respectively.
3. **Return Result**: The function returns `True` only if both methods are present, otherwise it returns `False`.

This solution is efficient and straightforward, ensuring that we accurately determine the presence of the required methods in the class.