

To solve this problem, we need to determine if an object has both the `fill` and `request` attributes. The solution should check for the existence of these attributes and return `True` if both are present, regardless of their values. 

### Approach
The approach involves using Python's built-in `hasattr()` function to check if the object has the specified attributes. The `hasattr()` function returns `True` if the object has the specified attribute and `False` otherwise. 

1. **Check for Attributes**: Use `hasattr(obj, 'fill')` to check if the `fill` attribute exists on the object.
2. **Check for Request Attribute**: Use `hasattr(obj, 'request')` to check if the `request` attribute exists on the object.
3. **Return Result**: Return `True` only if both attributes exist; otherwise, return `False`.

This approach ensures that we accurately determine the presence of both attributes without considering their values.

### Solution Code
```python
def is_fill_request_el(obj):
    """
    Check if the object has both 'fill' and 'request' attributes.
    """
    return hasattr(obj, 'fill') and hasattr(obj, 'request')
```

### Explanation
The function `is_fill_request_el` takes an object as an argument and uses `hasattr()` to check for the presence of the `fill` and `request` attributes. It returns `True` if both attributes are found, indicating that the object has both required attributes. This solution is efficient and straightforward, leveraging Python's built-in capabilities to ensure accurate and concise checks.