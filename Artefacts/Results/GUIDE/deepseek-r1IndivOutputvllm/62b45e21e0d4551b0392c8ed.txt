

To solve this problem, we need to determine the type of object stored at a given file path. The function should return a string indicating whether the path refers to a file, a directory, or neither.

### Approach
1. **Problem Analysis**: The task is to check the type of object at a given path. The possible types are "FILE" for existing files, "DIRECTORY" for existing directories, and "NONTYPE" for paths that do not exist or refer to non-file/directory objects (like symbolic links pointing to files).
2. **Intuition**: Using Python's `os.path` module, we can check if a path exists and determine its type. If the path exists, we use `os.path.isfile` to check for a file and `os.path.isdir` to check for a directory.
3. **Algorithm Selection**: We will use the `os.path.exists` function to check if the path exists. Depending on the result, we will further check if it's a file or directory using `os.path.isfile` and `os.path.isdir` respectively. If the path does not exist, we return "NONTYPE".

### Solution Code
```python
import os.path

def find_path_type(path):
    """
    Return a string indicating the type of thing at the given path.
    
    Args:
        path (str): The path to check.
        
    Returns:
        str: "FILE" if the path refers to a file, "DIRECTORY" if it refers to a directory, or "NONTYPE" otherwise.
    """
    if os.path.exists(path):
        if os.path.isfile(path):
            return "FILE"
        elif os.path.isdir(path):
            return "DIRECTORY"
        else:
            return "NONTYPE"
    else:
        return "NONTYPE"
```

### Explanation
- **Function Definition**: The function `find_path_type` takes a single argument `path` which is a string.
- **Existence Check**: The function first checks if the path exists using `os.path.exists(path)`.
  - If the path does not exist, it returns "NONTYPE".
  - If the path exists, it proceeds to determine if it's a file or directory.
- **File Check**: Using `os.path.isfile(path)`, the function checks if the path refers to a file and returns "FILE" if true.
- **Directory Check**: Using `os.path.isdir(path)`, the function checks if the path refers to a directory and returns "DIRECTORY" if true.
- **Fallback**: If the path is neither a file nor a directory, the function returns "NONTYPE".

This approach ensures that we accurately determine the type of object at the given path using straightforward checks with the `os.path` module.