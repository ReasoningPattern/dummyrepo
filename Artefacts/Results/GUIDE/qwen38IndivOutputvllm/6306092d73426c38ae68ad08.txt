

```python
def _get_conditionally_required_args(self, command_name, options_spec, args):
    """
    List arguments with ``required_when`` condition matched.

    :param command_name: the command name.
    :param options_spec: the list of command spec options.
    :param args: the received input arguments
    :return: list, list of argument names with matched ``required_when``
        condition
    """
    required_args = []
    for option in options_spec:
        if 'required_when' in option:
            condition = option['required_when']
            context = {
                'command_name': command_name,
                'args': args,
                'isinstance': isinstance,
                'len': len,
                'type': type,
                'dict': dict,
                'list': list,
                'str': str,
                'int': int,
                'float': float,
                'bool': bool,
                'None': None
            }
            try:
                if eval(condition, context):
                    required_args.append(option['name'])
            except Exception:
                # Ignore any evaluation errors to avoid raising exceptions
                pass
    return required_args
```