

```python
def get_nested_custom_and_control_args(self, args):
    """
    Split input arguments to control nested and custom.

    Controls arguments: control the IR behavior. These arguments
        will not be put into the spec yml file
    Nested arguments: are used by the Ansible playbooks and will be put
        into the spec yml file.
    Custom arguments: Custom ansible variables to be used instead of the
        normal nested usage.

    :param args: the collected list of args.
    :return: (dict, dict): flat dicts (control_args, nested_args)
    """
    control_args = {}
    nested_args = {}

    for arg in args:
        if arg.startswith('--control-'):
            # Extract the key by removing the '--control-' prefix
            key = arg[len('--control-'):]
            control_args[key] = True
        elif arg.startswith('--custom-'):
            # Custom arguments are treated as nested but with a different prefix
            key = arg[len('--custom-'):]
            nested_args[key] = True
        elif arg.startswith('--'):
            # Standard nested arguments (e.g., --key=value)
            key, value = arg[2:].split('=', 1)
            nested_args[key] = value
        else:
            # Default case: treat as nested argument
            key, value = arg.split('=', 1)
            nested_args[key] = value

    return control_args, nested_args
```