

```python
import os
import yaml

def get_plugin_spec_flatten_dict(plugin_dir):
    """
    Use YAML to read various information in plugin_dir and return the information in dictionary form.
    """
    if not os.path.exists(plugin_dir):
        raise FileNotFoundError(f"The directory {plugin_dir} does not exist.")
    
    result = {}
    
    def flatten_dict(d, parent_key='', sep='.'):
        items = []
        for k, v in d.items():
            new_key = f"{parent_key}{sep}{k}" if parent_key else k
            if isinstance(v, dict):
                items.extend(flatten_dict(v, new_key, sep=sep).items())
            else:
                items.append((new_key, v))
        return dict(items)
    
    for filename in os.listdir(plugin_dir):
        file_path = os.path.join(plugin_dir, filename)
        if os.path.isfile(file_path) and filename.endswith(('.yml', '.yaml')):
            with open(file_path, 'r') as file:
                try:
                    data = yaml.safe_load(file)
                    if data is None:
                        continue  # Skip empty files
                    flattened = flatten_dict(data)
                    result.update(flattened)
                except yaml.YAMLError as e:
                    raise ValueError(f"Error parsing YAML file {file_path}: {e}")
    
    return result
```