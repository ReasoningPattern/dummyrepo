

```python
def cachedmethod(cache, key=hashkey, lock=None):
    """
    Returns a decorator function that can call a result in the cache.
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            key_val = key(args, kwargs)
            if key_val in cache:
                return cache[key_val]
            if lock:
                lock.acquire()
                try:
                    if key_val in cache:
                        return cache[key_val]
                    result = func(*args, **kwargs)
                    cache[key_val] = result
                    return result
                finally:
                    lock.release()
            else:
                result = func(*args, **kwargs)
                cache[key_val] = result
                return result
        return wrapper
    return decorator
```