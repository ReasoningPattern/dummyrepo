

```python
class MyClass:
    def __init__(self, obj):
        self.obj = obj

    def pretty(self, indent=0, debug=False):
        obj = f"'{self.obj}'" if isinstance(self.obj, str) else repr(self.obj)
        debug_details = ", debug=True" if debug else ""
        return " " * indent + f"{self.__class__.__name__}({debug_details}{obj})"

import unittest

class TestPrettyMethod(unittest.TestCase):
    def test_string_obj(self):
        obj = MyClass("hello")
        result = obj.pretty()
        self.assertEqual(result, "MyClass('hello')")

    def test_non_string_obj(self):
        obj = MyClass(42)
        result = obj.pretty()
        self.assertEqual(result, "MyClass(42)")

    def test_debug_true(self):
        obj = MyClass(42)
        result = obj.pretty(debug=True)
        self.assertEqual(result, "MyClass(debug=True, 42)")

    def test_indent(self):
        obj = MyClass("hello")
        result = obj.pretty(indent=2)
        self.assertEqual(result, "  MyClass('hello')")

    def test_all_parameters(self):
        obj = MyClass("hello")
        result = obj.pretty(indent=2, debug=True)
        self.assertEqual(result, "  MyClass(debug=True, 'hello')")
```