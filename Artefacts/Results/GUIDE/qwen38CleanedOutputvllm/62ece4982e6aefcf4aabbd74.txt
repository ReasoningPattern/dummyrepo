import tarfile
from pathlib import Path
from typing import Optional, Union

def prepare_repository_from_archive(
    archive_path: str,
    filename: Optional[str] = None,
    tmp_path: Union[PosixPath, str] = "/tmp",
) -> str:
    """
    Given an existing archive_path, uncompress it.
    Returns a file repo url which can be used as origin url.

    This does not deal with the case where the archive passed along does not exist.
    @param archive_path : archive file path
    @param filename: File name
    @param tmp_path: Temporary file path
    @return Repo URL
    """
    tmp_path = Path(tmp_path)
    if filename is None:
        # Determine the directory name from the archive name
        archive_name = Path(archive_path).stem
        # Remove common archive extensions
        filename = archive_name.replace('.tar.gz', '').replace('.tar', '').replace('.tgz', '')
    # Extract the archive
    with tarfile.open(archive_path) as tar:
        tar.extract(filename, path=tmp_path)
    repo_url = f"file://{tmp_path}/{filename}"
    return repo_url