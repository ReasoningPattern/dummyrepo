import argparse

def parse_arguments(*unparsed_arguments):
    """
    Given command-line arguments with which this script was invoked, parse the arguments and return
    them as a dict mapping from subparser name (or "global") to an argparse.Namespace instance.
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest="subparser_name", required=False)
    
    # Example subparsers; in a real scenario, these would be defined elsewhere
    add_parser = subparsers.add_parser("add")
    add_parser.add_argument("--name", help="Name argument for add command")
    remove_parser = subparsers.add_parser("remove")
    remove_parser.add_argument("--age", help="Age argument for remove command")
    
    # Parse the arguments
    args = parser.parse_args(unparsed_arguments)
    
    result = {"global": args}
    
    # Handle subparsers
    if args.subparser_name == "add":
        result["add"] = args
    elif args.subparser_name == "remove":
        result["remove"] = args
    
    return result