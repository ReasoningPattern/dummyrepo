import re
import unittest

def validate_value(value):
    """
    Validate the given value against the corresponding regular expression.
    """
    if not isinstance(value, str):
        raise ValueError("Value must be a string")
    if not re.fullmatch(r"[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$",
                        value):
        raise ValueError("Value does not match the required pattern")
    return True

class TestValidateValue(unittest.TestCase):
    def test_valid_email(self):
        self.assertTrue(validate_value("test@example.com"))
    
    def test_invalid_email(self):
        with self.assertRaises(ValueError):
            validate_value("invalid-email")
    
    def test_non_string_value(self):
        with self.assertRaises(ValueError):
            validate_value(12345)
    
    def test_empty_string(self):
        with self.assertRaises(ValueError):
            validate_value("")
    
    def test_invalid_format(self):
        with self.assertRaises(ValueError):
            validate_value("user@domain")