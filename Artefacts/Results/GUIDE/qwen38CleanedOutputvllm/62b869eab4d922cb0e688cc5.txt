def update_last_applied_manifest_dict_from_resp(
    last_applied_manifest, observer_schema, response
):
    """
    Together with :func:`update_last_applied_manifest_list_from_resp`, this
    function is called recursively to update a partial ``last_applied_manifest``
    from a partial Kubernetes response

    Args:
        last_applied_manifest (dict): partial ``last_applied_manifest`` being
            updated
        observer_schema (dict): partial ``observer_schema``
        response (dict): partial response from the Kubernetes API.

    Raises:
        KeyError: If the observed field is not present in the Kubernetes response

    This function goes through all observed fields, and initializes their value in
    last_applied_manifest if they are not yet present
    """
    for key in observer_schema:
        if key not in response:
            raise KeyError(f"Field {key} not found in response")
        if isinstance(observer_schema[key], dict):
            update_last_applied_manifest_dict_from_resp(
                last_applied_manifest,
                observer_schema[key],
                response[key]
            )
        else:
            if key not in last_applied_manifest:
                last_applied_manifest[key] = response[key]