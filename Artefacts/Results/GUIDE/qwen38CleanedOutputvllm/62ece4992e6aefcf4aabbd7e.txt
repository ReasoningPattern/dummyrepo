import os

def _resolve_string(matcher):
    """
    Get the value from environment given a matcher containing a name and an optional default value in its group dict.
    If the variable is not defined in environment and no default value is provided, an Error is raised.
    """
    name = matcher.group('name')
    env_value = os.environ.get(name)
    if env_value is not None:
        return env_value
    default = matcher.group('default')
    if default is not None:
        return default
    raise ValueError(f"Environment variable {name} not found and no default provided")