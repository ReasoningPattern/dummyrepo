def cached(cache, key=hashkey, lock=None):
    def decorator(func):
        def wrapper(*args, **kwargs):
            if lock is not None:
                lock.acquire()
            key_value = key(*args, **kwargs)
            if key_value in cache:
                return cache[key_value]
            result = func(*args, **kwargs)
            cache[key_value] = result
            if lock is not None:
                lock.release()
            return result
        return wrapper
    return decorator