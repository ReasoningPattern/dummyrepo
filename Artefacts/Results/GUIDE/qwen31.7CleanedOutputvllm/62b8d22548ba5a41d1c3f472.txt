import threading

def cachedmethod(cache, key=hashkey, lock=None):
    def decorator(func):
        def wrapper(*args, **kwargs):
            key_arg = key(*args, **kwargs)
            with lock:
                if key_arg in cache:
                    return cache[key_arg]
                result = func(*args, **kwargs)
                cache[key_arg] = result
                return result
        return wrapper
    return decorator