import logging
import configparser

def load_configurations(config_filenames, overrides=None, resolve_env=True):
    """
    Given a sequence of configuration filenames, load and validate each configuration file. If the configuration file
    cannot be read due to insufficient permissions or error parsing configuration file, the error log will
    be recorded. Otherwise, return the results as a tuple of: dict of configuration filename to corresponding parsed configuration,
    and sequence of logging.LogRecord instances containing any parse errors.
    """
    log_records = []
    config_dict = {}

    for filename in config_filenames:
        try:
            config = configparser.ConfigParser()
            config.read(filename)
            if overrides:
                config.update(overrides)
            config_dict[filename] = config
        except Exception as e:
            log_record = logging.LogRecord(
                name='load_configurations',
                level=logging.ERROR,
                pathname=filename,
                lineno=0,
                message=str(e)
            )
            log_records.append(log_record)

    return (config_dict, log_records)