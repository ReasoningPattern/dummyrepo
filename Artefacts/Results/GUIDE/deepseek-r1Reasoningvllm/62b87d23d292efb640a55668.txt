Okay, I need to generate Python code based on the given function signature and docstring. The function is called get_config and it's supposed to return a new VersioneerConfig instance and set various attributes on it. 

First, I should think about what VersioneerConfig might look like. I don't have the exact code, but I can assume it's a class that's part of a configuration management solution, possibly inspired by Ansible's Versioneer.

I remember that in Ansible, VersioneerConfig is used to handle module versions. It has attributes like min_version, max_version, and state. So I'll start by defining a class called VersioneerConfig with these attributes.

Next, the get_config function needs to create an instance of this class and set some default values. Let's set min_version to '2.4' and max_version to '3.0' as common defaults. Maybe include a state attribute, perhaps 'present' as a default.

Then, I should write some unit tests to ensure that the function works as expected. The tests should check if the function returns an instance of VersioneerConfig and that the attributes are correctly set. I'll use the unittest framework for this.

So, the test cases will include checking if config is an instance of the class, verifying the version attributes, and ensuring the state is set. I'll structure the tests using test cases with different versions to cover various scenarios.

Putting it all together, I'll write the code with the class definition and the function, followed by the unit tests. I'll make sure to import necessary modules like unittest and mock for mocking if needed, but in this case, maybe it's not necessary since the tests are straightforward.

I should also include docstrings in the class and function to explain what they do, making the code more understandable. 

Finally, I'll test the code to ensure everything works as expected, but since I'm just generating the code, I'll make sure there are no syntax errors and that it's properly formatted.
