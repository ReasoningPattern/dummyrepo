import datetime

def parse_frequency(frequency):
    """
    Given a frequency string with a number and a unit of time, return a corresponding
    datetime.timedelta instance.
    If the frequency is None or "always", return None.
    Raise ValueError if the given frequency cannot be parsed.
    For instance, given "3 days", return datetime.timedelta(days=3)

    @param frequency :  A frequency string "number timeunit"

    @return datetime.timedelta, the corresponding datetime
    """
    if frequency is None or frequency == "always":
        return None
    parts = frequency.split(maxsplit=1)
    if len(parts) != 2:
        raise ValueError("Invalid frequency format")
    number_str, unit_str = parts
    try:
        number = float(number_str)
    except ValueError:
        raise ValueError("Invalid number in frequency")
    unit_map = {
        'day': 'days',
        'days': 'days',
        'hour': 'hours',
        'hours': 'hours',
        'minute': 'minutes',
        'minutes': 'minutes',
        'second': 'seconds',
        'seconds': 'seconds',
        'millisecond': 'milliseconds',
        'milliseconds': 'milliseconds',
        'microsecond': 'microseconds',
        'microseconds': 'microseconds',
        'week': 'weeks',
        'weeks': 'weeks'
    }
    if unit_str not in unit_map:
        raise ValueError(f"Unknown unit: {unit_str}")
    param_name = unit_map[unit_str]
    return datetime.timedelta(**{param_name: number})