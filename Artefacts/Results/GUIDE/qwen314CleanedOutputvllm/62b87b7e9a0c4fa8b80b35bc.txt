def _update_context(self, context):
    """
    Update *context* with the properties of this graph.

    *context.error* is appended with indices of errors.
    Example subcontext for a graph with fields "E,t,error_E_low":
    {"error": {"x_low": {"index": 2}}}.
    Note that error names are called "x", "y" and "z"
    (this corresponds to first three coordinates,
    if they are present), which allows to simplify plotting.
    Existing values are not removed
    from *context.value* and its subcontexts.

    Called on "destruction" of the graph (for example,
    in :class:`.ToCSV`). By destruction we mean conversion
    to another structure (like text) in the flow.
    The graph object is not really destroyed in this process.
    """
    # Assuming self has a list of coordinates (e.g., self.coordinates)
    # and error attributes named like error_<coord>_<low/high>
    for i, coord in enumerate(self.coordinates):
        if i >= 3:
            break  # Only process first three coordinates (x, y, z)
        letter = 'xyz'[i]
        error_low_attr = f"error_{coord}_low"
        error_high_attr = f"error_{coord}_high"
        if hasattr(self, error_low_attr):
            key = f"{letter}_low"
            if key not in context.error:
                context.error[key] = []
            context.error[key].append({"index": i})
        if hasattr(self, error_high_attr):
            key = f"{letter}_high"
            if key not in context.error:
                context.error[key] = []
            context.error[key].append({"index": i})