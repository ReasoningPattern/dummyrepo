import yaml

class IRValidatorException(Exception):
    pass

class Validator:
    REQUIRED_FIELDS = []

    @classmethod
    def validate_from_file(cls, yaml_file=None):
        """
        Loads & validates that a YAML file has all required fields

        :param yaml_file: Path to YAML file
        :raise IRValidatorException: when mandatory data is missing in file
        :return: Dictionary with data loaded from a YAML file
        """
        if yaml_file is None:
            raise IRValidatorException("YAML file path is required")
        try:
            with open(yaml_file, 'r') as file:
                data = yaml.safe_load(file)
        except Exception as e:
            raise IRValidatorException(f"Error reading YAML file: {e}") from e

        required_fields = getattr(cls, 'REQUIRED_FIELDS', [])
        for field in required_fields:
            if field not in data:
                raise IRValidatorException(f"Missing required field: {field}")

        return data