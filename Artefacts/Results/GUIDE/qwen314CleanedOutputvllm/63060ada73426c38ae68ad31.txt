def _convert_non_cli_args(self, parser_name, values_dict):
    """
    Casts arguments to correct types by modifying values_dict param.

    By default all the values are strings.

    :param parser_name: The command name, e.g. main, virsh, ospd, etc
    :param values_dict: The dict of with arguments
    """
    # Define conversion rules for different parsers
    conversion_rules = {
        'main': {
            'timeout': int,
            'verbose': lambda x: x.lower() in ['true', 'yes'],
        },
        'virsh': {
            'domain_id': int,
            'count': int,
        },
        'ospd': {
            'port': int,
            'timeout': float,
        },
    }

    # Apply conversion rules based on parser name
    rules = conversion_rules.get(parser_name, {})
    for key, converter in rules.items():
        if key in values_dict:
            try:
                values_dict[key] = converter(values_dict[key])
            except (ValueError, TypeError):
                # Handle conversion errors if needed
                pass
    return values_dict