

```python
import unittest

class TestCommandParser(unittest.TestCase):
    def setUp(self):
        self.parser = CommandParser()
        self.parser.command_options = {
            'main': ['--option1', '-o'],
            'virsh': ['--virsh-opt', '-v'],
            'ospd': ['--ospd-flag', '-s']
        }

    def test_get_parser_option_specs_valid_command(self):
        self.assertEqual(self.parser.get_parser_option_specs('main'), ['--option1', '-o'])
        self.assertEqual(self.parser.get_parser_option_specs('virsh'), ['--virsh-opt', '-v'])
        self.assertEqual(self.parser.get_parser_option_specs('ospd'), ['--ospd-flag', '-s'])

    def test_get_parser_option_specs_invalid_command(self):
        self.assertEqual(self.parser.get_parser_option_specs('invalid'), [])

class CommandParser:
    def __init__(self):
        self.command_options = {}

    def get_parser_option_specs(self, command_name):
        """
        Gets all the options for the specified command

        :param command_name: the command name (main, virsh, ospd, etc...)
        :return: the list of all command options
        """
        return self.command_options.get(command_name, [])
```