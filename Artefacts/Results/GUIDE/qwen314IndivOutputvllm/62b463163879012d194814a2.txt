

```python
import unittest

class TestAssetManager(unittest.TestCase):
    def test_add_asset(self):
        manager = AssetManager()
        manager.add_asset('image1', '/path/to/image1.png')
        self.assertEqual(manager._assets['image1'], '/path/to/image1.png')

    def test_add_asset_overwrite(self):
        manager = AssetManager()
        manager.add_asset('image1', '/path/to/image1.png')
        manager.add_asset('image1', '/new/path/to/image1.png')
        self.assertEqual(manager._assets['image1'], '/new/path/to/image1.png')

class AssetManager:
    def __init__(self):
        self._assets = {}

    def add_asset(self, basename, file_path):
        """
        Assign the filepath invoke by filepath() in the class to "basename" in _assets in the class.
        """
        self._assets[basename] = file_path
```