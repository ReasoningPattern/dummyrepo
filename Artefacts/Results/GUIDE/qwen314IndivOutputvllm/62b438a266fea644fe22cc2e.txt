

```python
import argparse

def parse_arguments(*unparsed_arguments):
    """
    Given command-line arguments with which this script was invoked, parse the arguments and return
    them as a dict mapping from subparser name (or "global") to an argparse.Namespace instance.
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='subcommand', required=False)
    
    # Example subparsers for demonstration purposes
    subparsers.add_parser('init')
    subparsers.add_parser('run')
    subparsers.add_parser('config')
    
    args = parser.parse_args(unparsed_arguments)
    
    result = {}
    
    # If a subcommand was specified, use that as the key
    if args.subcommand:
        result[args.subcommand] = args
    else:
        # If no subcommand was specified, use "global" as the key
        result['global'] = args
    
    return result
```