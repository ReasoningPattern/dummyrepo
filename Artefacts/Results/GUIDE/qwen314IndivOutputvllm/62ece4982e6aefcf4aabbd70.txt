

```python
import unittest
from unittest.mock import patch
import platform

def os_is_mac():
    """
    Checks if the os is macOS

    :return: bool, True is macOS, otherwise False.
    """
    return platform.system() == 'Darwin'

class TestOsIsMac(unittest.TestCase):
    @patch('platform.system')
    def test_os_is_mac_true(self, mock_system):
        mock_system.return_value = 'Darwin'
        self.assertTrue(os_is_mac())

    @patch('platform.system')
    def test_os_is_mac_false_linux(self, mock_system):
        mock_system.return_value = 'Linux'
        self.assertFalse(os_is_mac())

    @patch('platform.system')
    def test_os_is_mac_false_windows(self, mock_system):
        mock_system.return_value = 'Windows'
        self.assertFalse(os_is_mac())

    @patch('platform.system')
    def test_os_is_mac_false_posix(self, mock_system):
        mock_system.return_value = 'posix'
        self.assertFalse(os_is_mac())

if __name__ == '__main__':
    unittest.main()
```