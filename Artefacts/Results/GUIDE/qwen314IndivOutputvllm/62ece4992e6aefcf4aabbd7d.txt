

```python
import subprocess
import os

def subprocess_run_helper(func, *args, timeout, extra_env=None):
    """
    Run a function in a sub-process

    Args:
        func: function, the function to be run. It must be in a module that is importable.
        *args: str. Any additional command line arguments to be passed in
                the first argument to ``subprocess.run``.
        extra_env: dict[str, str]. Any additional environment variables to be set for the subprocess.
    Returns:
        CompletedProcess instance
    """
    module = func.__module__
    func_name = func.__name__
    # Prepare the arguments as a list for the function call
    arg_list = [repr(arg) for arg in args]
    command_str = f'import {module}; {module}.{func_name}({", ".join(arg_list)})'
    command = ['python', '-c', command_str]
    env = os.environ.copy()
    if extra_env:
        env.update(extra_env)
    result = subprocess.run(command, env=env, timeout=timeout)
    return result
```