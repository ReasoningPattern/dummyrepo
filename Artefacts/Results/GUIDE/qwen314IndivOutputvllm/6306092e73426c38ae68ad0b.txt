

```python
class Validator:
    def __init__(self, min_val, max_val):
        self.min = min_val
        self.max = max_val

    def validate_min_max_args(self, args):
        """
        Check if value of the given args is between minimum and maximum values
        """
        if not (self.min <= args <= self.max):
            raise ValueError(f"Value {args} is not between {self.min} and {self.max}")
        return True


import unittest

class TestValidator(unittest.TestCase):
    def test_validate_min_max_args(self):
        validator = Validator(1, 10)
        self.assertTrue(validator.validate_min_max_args(5))
        self.assertTrue(validator.validate_min_max_args(1))
        self.assertTrue(validator.validate_min_max_args(10))
        with self.assertRaises(ValueError):
            validator.validate_min_max_args(0)
        with self.assertRaises(ValueError):
            validator.validate_min_max_args(11)
        validator = Validator(10, 1)
        with self.assertRaises(ValueError):
            validator.validate_min_max_args(5)

if __name__ == '__main__':
    unittest.main()
```