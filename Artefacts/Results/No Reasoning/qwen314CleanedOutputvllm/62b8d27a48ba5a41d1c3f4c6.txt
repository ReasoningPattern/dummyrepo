def cached(cache, key=hashkey, lock=None):
    """
    Returns a decorator function that saves the results in the cache
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            k = key(*args, **kwargs)
            if lock is not None:
                with lock:
                    if k not in cache:
                        cache[k] = func(*args, **kwargs)
                    return cache[k]
            else:
                if k not in cache:
                    cache[k] = func(*args, **kwargs)
                return cache[k]
        return wrapper
    return decorator