def create_complex_argument_type(self, subcommand, type_name, option_name, spec_option):
    """
    Returns the corresponding function in COMPLEX_TYPES based on type_name and returns the result obtained by complex_action after option_name, (self.vars, self.defaults, self.plugin_path), subcommand, spec_option) is input.
    """
    complex_func = COMPLEX_TYPES[type_name]
    return complex_func(option_name, (self.vars, self.defaults, self.plugin_path), subcommand, spec_option)