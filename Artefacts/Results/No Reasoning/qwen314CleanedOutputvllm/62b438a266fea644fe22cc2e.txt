import argparse

def parse_arguments(*unparsed_arguments):
    """
    Given command-line arguments with which this script was invoked, parse the arguments and return
    them as a dict mapping from subparser name (or "global") to an argparse.Namespace instance.
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest="subparser_name")

    # Example subparsers
    parser_a = subparsers.add_parser("a")
    parser_a.add_argument("--arg1", type=str, help="Argument for subparser a")

    parser_b = subparsers.add_parser("b")
    parser_b.add_argument("--arg2", type=int, help="Argument for subparser b")

    # Parse the arguments
    args = parser.parse_args(unparsed_arguments)

    # Return a dictionary mapping subparser name to Namespace
    result = {}
    if args.subparser_name == "a":
        result["a"] = args
    elif args.subparser_name == "b":
        result["b"] = args
    else:
        result["global"] = args

    return result