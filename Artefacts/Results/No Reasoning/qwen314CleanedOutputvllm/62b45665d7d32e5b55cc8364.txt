def parse_subparser_arguments(unparsed_arguments, subparsers):
    """
    Given a sequence of arguments and a dict from subparser name to argparse.ArgumentParser
    instance, give each requested action's subparser a shot at parsing all arguments. This allows
    common arguments like "--repository" to be shared across multiple subparsers.

    Return the result as a tuple of (a dict mapping from subparser name to a parsed namespace of
    arguments, a list of remaining arguments not claimed by any subparser).
    """
    parsed = {}
    remaining_args = list(unparsed_arguments)
    for name, parser in subparsers.items():
        try:
            args = parser.parse_args(remaining_args)
            parsed[name] = args
            # Remove the arguments that were consumed by this parser
            remaining_args = list(parser.parse_known_args(remaining_args)[1])
        except SystemExit:
            # If parsing fails, skip this subparser
            continue
    return parsed, remaining_args