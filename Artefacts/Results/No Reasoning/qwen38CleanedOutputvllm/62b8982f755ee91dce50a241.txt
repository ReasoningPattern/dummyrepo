<think>

</think>

def normalized(self):
	"""
	Normalize all units of time to integers.
	"""
	for key in self._data:
		if isinstance(self._data[key], dict):
			self._data[key] = self._normalize_dict(self._data[key])
		elif isinstance(self._data[key], list):
			self._data[key] = [self._normalize_value(item) for item in self._data[key]]
		else:
			self._data[key] = self._normalize_value(self._data[key])

	def _normalize_dict(self, d):
		for key in d:
			if isinstance(d[key], dict):
				d[key] = self._normalize_dict(d[key])
			elif isinstance(d[key], list):
				d[key] = [self._normalize_value(item) for item in d[key]]
			else:
				d[key] = self._normalize_value(d[key])
		return d

	def _normalize_value(self, value):
		if isinstance(value, (int, float)):
			return int(value)
		elif isinstance(value, str):
			try:
				return int(value)
			except ValueError:
				return value
		return value