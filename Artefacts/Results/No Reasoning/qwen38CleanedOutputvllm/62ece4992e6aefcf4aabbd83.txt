import subprocess
import os

def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False, env=None):
    """
    A list of command is given. Run the given command(s) with the given arguments use a subprocess. Return the running result (stdout and returncode)
    """
    if not commands:
        return "", 0

    if isinstance(commands, str):
        commands = [commands]

    result = []
    for cmd in commands:
        if isinstance(args, dict):
            cmd_args = [cmd] + [f"{k}={v}" for k, v in args.items()]
        else:
            cmd_args = [cmd] + args

        env = env or os.environ.copy()
        process = subprocess.Popen(
            cmd_args,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE if not hide_stderr else subprocess.DEVNULL,
            cwd=cwd,
            env=env
        )
        stdout, stderr = process.communicate()
        result.append((stdout.decode(), process.returncode))

    stdout = b''.join(stdout for stdout, _ in result).decode()
    returncode = result[0][1] if result else 0

    if verbose:
        print(stdout)

    return stdout, returncode