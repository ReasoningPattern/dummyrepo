import os
import logging
import yaml
from typing import Dict, List, Tuple, Union

def load_configurations(config_filenames: List[str], overrides: Dict[str, Union[str, int, float, bool]] = None, resolve_env: bool = True) -> Tuple[Dict[str, dict], List[logging.LogRecord]]:
    config_dict = {}
    error_logs = []
    
    for filename in config_filenames:
        try:
            with open(filename, 'r') as file:
                config_content = yaml.safe_load(file)
                if overrides:
                    config_content = merge_config(overrides, config_content)
                config_dict[filename] = config_content
        except Exception as e:
            error_logs.append(logging.LogRecord(
                name="config_loader",
                level=logging.ERROR,
                pathname=filename,
                lineno=0,
                msg=str(e),
                args=[],
                exc_info=None
            ))
    
    return config_dict, error_logs

def merge_config(overrides: Dict, config: Dict) -> Dict:
    merged = config.copy()
    for key, value in overrides.items():
        if key in merged:
            if isinstance(merged[key], dict) and isinstance(value, dict):
                merged[key] = merge_config(value, merged[key])
            else:
                merged[key] = value
        else:
            merged[key] = value
    return merged