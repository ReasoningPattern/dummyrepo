<think>

</think>

```python
import datetime

def parse_frequency(frequency):
    """
	Given a frequency string with a number and a unit of time, return a corresponding
     datetime.timedelta instance.
     If the frequency is None or "always", return None.
     Raise ValueError if the given frequency cannot be parsed.
     For instance, given "3 timeunit", return datetime.timedelta(timeunit=3)

     @param frequency :  A frequency string "number timeunit"

    @return str, the corresponding datetime
	"""
    if frequency is None or frequency == "always":
        return None
    parts = frequency.split()
    if len(parts) != 2:
        raise ValueError("Invalid frequency format")
    try:
        number = int(parts[0])
    except ValueError:
        raise ValueError("Invalid frequency format")
    unit = parts[1].lower()
    if unit == 'second' or unit == 'seconds':
        return datetime.timedelta(seconds=number)
    elif unit == 'minute' or unit == 'minutes':
        return datetime.timedelta(minutes=number)
    elif unit == 'hour' or unit == 'hours':
        return datetime.timedelta(hours=number)
    elif unit == 'day' or unit == 'days':
        return datetime.timedelta(days=number)
    elif unit == 'week' or unit == 'weeks':
        return datetime.timedelta(weeks=number)
    else:
        raise ValueError(f"Unsupported time unit: {unit}")
```