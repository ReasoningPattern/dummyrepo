<think>

</think>

```python
def cached(cache, key=hashkey, lock=None):
    """
    Returns a decorator function that saves the results in the cache
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            # Generate the cache key
            k = key(*args, **kwargs)
            # Acquire lock if provided
            if lock:
                with lock:
                    result = cache.get(k)
                    if result is None:
                        result = func(*args, **kwargs)
                        cache.set(k, result)
            else:
                result = cache.get(k)
                if result is None:
                    result = func(*args, **kwargs)
                    cache.set(k, result)
            return result
        return wrapper
    return decorator
```