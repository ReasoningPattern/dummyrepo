<think>

</think>

```python
import subprocess
import os

def run_command(commands, args, cwd=None, verbose=False, hide_stderr=False, env=None):
    """
    Call the given command(s).
    """
    if not isinstance(commands, list):
        commands = [commands]
    
    for cmd in commands:
        if args is not None:
            full_cmd = cmd + args
        else:
            full_cmd = cmd
        
        if verbose:
            print(f"Running command: {' '.join(full_cmd)}")
        
        env = env or os.environ.copy()
        process = subprocess.Popen(
            full_cmd,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE if not hide_stderr else subprocess.DEVNULL,
            stdin=subprocess.DEVNULL,
            cwd=cwd,
            env=env
        )
        
        stdout, stderr = process.communicate()
        
        if process.returncode != 0:
            if not hide_stderr:
                print(f"Error output: {stderr.decode()}")
            raise subprocess.CalledProcessError(process.returncode, full_cmd, output=stdout, stderr=stderr)
        
        if verbose:
            print(stdout.decode())
```