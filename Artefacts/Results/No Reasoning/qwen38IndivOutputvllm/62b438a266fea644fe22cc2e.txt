<think>

</think>

```python
import argparse

def parse_arguments(*unparsed_arguments):
    """
    Given command-line arguments with which this script was invoked, parse the arguments and return
    them as a dict mapping from subparser name (or "global") to an argparse.Namespace instance.
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='subparser_name')
    subparsers.required = True

    def add_subparser(name, **kwargs):
        subparser = subparsers.add_parser(name, **kwargs)
        return subparser

    args = parser.parse_args(unparsed_arguments)
    result = {"global": args}

    for subparser_name in subparsers.choices:
        subparser = subparsers.choices[subparser_name]
        subparser_args = subparser.parse_args(unparsed_arguments)
        result[subparser_name] = subparser_args

    return result
```