<think>

</think>

```python
import re
from typing import Tuple, Set, Callable

def find_tags(text: str, replacer: Callable = None) -> Tuple[Set, str]:
    """
    Find tags in text.

    Tries to ignore tags inside code blocks.

    Optionally, if passed a "replacer", will also replace the tag word with the result
    of the replacer function called with the tag word.

    Returns a set of tags and the original or replaced text.
    """
    code_block_pattern = re.compile(r'```[\s\S]*?```', re.DOTALL)
    text_without_code = code_block_pattern.sub('', text)
    
    tag_pattern = re.compile(r'\b\w+:\w+\b')
    tags = set(tag_pattern.findall(text_without_code))
    
    if replacer:
        def replace_tag(match):
            tag = match.group(0)
            return replacer(tag)
        text_with_replacements = re.sub(tag_pattern, replace_tag, text_without_code)
        return tags, text_with_replacements
    return tags, text_without_code
```