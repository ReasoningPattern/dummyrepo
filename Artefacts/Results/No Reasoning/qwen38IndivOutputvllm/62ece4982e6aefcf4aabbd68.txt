<think>

</think>

```python
from typing import List, Optional

def int_to_string(number: int, alphabet: List[str], padding: Optional[int] = None) -> str:
    """
    Convert a number to a string, using the given alphabet.
    The number represents a short uuid.
    The output has the most significant digit first.
    @param number: Int value
    @param alphabet : List with letters
    @param padding : Optional with int value
    @return  string value corresponded to int
    """
    if not alphabet:
        raise ValueError("Alphabet cannot be empty")
    if number == 0:
        return alphabet[0]
    result = []
    base = len(alphabet)
    while number > 0:
        number, rem = divmod(number, base)
        result.append(alphabet[rem])
    if padding is not None:
        while len(result) < padding:
            result.append(alphabet[0])
    return ''.join(reversed(result))
```