<think>

</think>

```python
def parse_subparser_arguments(unparsed_arguments, subparsers):
    """
	Given a sequence of arguments and a dict from subparser name to argparse.ArgumentParser
	instance, give each requested action's subparser a shot at parsing all arguments. This allows
	common arguments like "--repository" to be shared across multiple subparsers.

	Return the result as a tuple of (a dict mapping from subparser name to a parsed namespace of
	arguments, a list of remaining arguments not claimed by any subparser).
	"""
    parsed_results = {}
    remaining_args = list(unparsed_arguments)
    for subparser_name, subparser in subparsers.items():
        for i in range(len(remaining_args)):
            arg = remaining_args[i]
            if arg.startswith('-') and arg not in ['--help', '-h']:
                try:
                    subparser.parse_args([arg])
                    parsed_results[subparser_name] = subparser.parse_args(remaining_args)
                    remaining_args = remaining_args[i+1:]
                    break
                except argparse.ArgumentError:
                    continue
    return parsed_results, remaining_args
```