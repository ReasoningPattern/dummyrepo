from datetime import datetime, timezone
from typing import Optional, Type

class Time:
    @classmethod
    def from_ticks(cls, ticks: int, tz: Optional[datetime.tzinfo] = None) -> "Time":
        """
        Create a time from ticks (nanoseconds since midnight).

        :param ticks: nanoseconds since midnight
        :type ticks: int
        :param tz: optional timezone
        :type tz: datetime.tzinfo
        :rtype: Time
        :raises ValueError: if ticks is out of bounds
            (0 <= ticks < 86400000000000)
        """
        if ticks < 0 or ticks >= 86400000000000:
            raise ValueError("ticks out of bounds")
        
        # Convert ticks to seconds
        seconds = ticks // 1_000_000_000
        
        # Create a datetime object
        dt = datetime(1, 1, 1, 0, 0, 0, 0, tzinfo=tz)
        dt += datetime.timedelta(seconds=seconds)
        
        return cls(dt)