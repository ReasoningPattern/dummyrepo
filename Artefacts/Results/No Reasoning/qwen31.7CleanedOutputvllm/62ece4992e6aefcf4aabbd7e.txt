def _resolve_string(matcher):
	"""
	Get the value from environment given a matcher containing a name and an optional default value in its group dict.
    If the variable is not defined in environment and no default value is provided, an Error is raised.
	"""
	import os

	def get_env_var(name, default=None):
		try:
			return os.environ[name]
		except KeyError:
			if default is not None:
				return default
			else:
				raise KeyError(f"Environment variable {name} not found")

	name = matcher.group('name')
	default = matcher.group('default')

	return get_env_var(name, default)