<think>

</think>

```python
def ansible_playbook(ir_workspace, ir_plugin, playbook_path, verbose=None,
                     extra_vars=None, ansible_args=None):
    """
    Wraps the 'ansible-playbook' CLI.

    :param ir_workspace: An Infrared Workspace object represents the active
    workspace
    :param ir_plugin: An InfraredPlugin object of the current plugin
    :param playbook_path: the playbook to invoke
    :param verbose: Ansible verbosity level
    :param extra_vars: dict. Passed to Ansible as extra-vars
    :param ansible_args: dict of ansible-playbook arguments to plumb down
        directly to Ansible.
    """
    import os
    import subprocess

    cmd = ["ansible-playbook"]

    if verbose:
        cmd.append("-{}".format("v" * verbose))

    if extra_vars:
        for key, value in extra_vars.items():
            cmd.append("--extra-vars")
            cmd.append(f"{key}={value}")

    if ansible_args:
        for key, value in ansible_args.items():
            cmd.append(f"--{key}")
            if value is not None:
                cmd.append(str(value))

    cmd.append(playbook_path)

    env = os.environ.copy()
    env["ANSIBLE_HOST_KEY_CHECKING"] = "False"

    process = subprocess.Popen(cmd, env=env, cwd=ir_workspace.path,
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE,
                               text=True)
    stdout, stderr = process.communicate()

    if process.returncode != 0:
        raise RuntimeError(f"Ansible playbook failed: {stderr}")

    return stdout
```