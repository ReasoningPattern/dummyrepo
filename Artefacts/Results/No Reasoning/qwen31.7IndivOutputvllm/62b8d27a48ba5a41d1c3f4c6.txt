<think>

</think>

```python
def cached(cache, key=hashkey, lock=None):
	"""
	Returns a decorator function that saves the results in the cache
	"""
	def decorator(func):
		cache_key = key(func)
		if lock is not None:
			lock.acquire()
		try:
			result = cache.get(cache_key)
			if result is not None:
				return result
		except Exception as e:
			pass
		result = func()
		if lock is not None:
			lock.release()
		cache[cache_key] = result
		return result
	return decorator
```