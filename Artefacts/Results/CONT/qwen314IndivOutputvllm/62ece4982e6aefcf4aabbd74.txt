

```python
import subprocess
from pathlib import Path
from typing import Optional, Union, PosixPath

def prepare_repository_from_archive(
    archive_path: str,
    filename: Optional[str] = None,
    tmp_path: Union[PosixPath, str] = "/tmp",
) -> str:
    """
    Given an existing archive_path, uncompress it.
    Returns a file repo url which can be used as origin url.

    This does not deal with the case where the archive passed along does not exist.
    @param archive_path : archive file path
    @param filename: File name
    @param tmp_path: Temporary file path
    @return Repo URL
    """
    tmp_path_obj = Path(tmp_path)
    repo_dir = tmp_path_obj / (filename or Path(archive_path).name)
    repo_dir.mkdir(parents=True, exist_ok=True)
    subprocess.run(['tar', '-xzf', archive_path, '-C', str(repo_dir)], check=True)
    return f"file://{repo_dir.as_posix()}"
```