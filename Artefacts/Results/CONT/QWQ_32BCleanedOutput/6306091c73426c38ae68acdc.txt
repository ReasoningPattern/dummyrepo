import yaml
from your_package.exceptions import IRValidatorException  # Adjust the import path as needed

class YourSpecValidator:
    REQUIRED_FIELDS = []  # Define required fields here

    @classmethod
    def validate_from_content(cls, spec_content=None):
        """
        validates that spec (YAML) content has all required fields

        :param spec_content: content of spec file
        :raise IRValidatorException: when mandatory data is missing in spec file
        :return: Dictionary with data loaded from a spec (YAML) file
        """
        if spec_content is None:
            raise IRValidatorException("No spec content provided")
        try:
            data = yaml.safe_load(spec_content)
        except yaml.YAMLError as e:
            raise IRValidatorException(f"Invalid YAML content: {e}") from e
        if not isinstance(data, dict):
            raise IRValidatorException("Spec content must be a YAML mapping")
        for field in cls.REQUIRED_FIELDS:
            if field not in data:
                raise IRValidatorException(f"Missing required field: {field}")
        return data