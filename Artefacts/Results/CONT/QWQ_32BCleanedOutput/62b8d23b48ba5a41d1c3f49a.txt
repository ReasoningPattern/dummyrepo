```python
import collections
from functools import wraps

def mru_cache(maxsize=128, typed=False):
    def decorating_function(user_function):
        cache = collections.OrderedDict()
        hits = 0
        misses = 0

        def wrapper(*args, **kwds):
            nonlocal hits, misses
            key = make_key(args, kwds, typed)
            if key in cache:
                hits += 1
                val = cache.pop(key)
                cache[key] = val
                return val
            else:
                misses += 1
                val = user_function(*args, **kwds)
                if len(cache) >= maxsize:
                    oldest_key = next(iter(cache))
                    del cache[oldest