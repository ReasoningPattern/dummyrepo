def generate_default_observer_schema(app):
    schemas = {}
    for resource in app.spec.manifest:
        name = resource["metadata"]["name"]
        kind = resource["kind"]
        if name in app.spec.observers or kind in app.spec.observers:
            continue
        schema = {
            "apiVersion": resource["apiVersion"],
            "kind": kind,
            "metadata": {"name": name},
            "observer": "Kubernetes",
            "predicates": [
                {
                    "jsonPath": ".status.conditions[?(@.type=='Ready')].status",
                    "operator": "Equals",
                    "value": "True",
                }
            ],
        }
        schemas[name] = schema
    return schemas