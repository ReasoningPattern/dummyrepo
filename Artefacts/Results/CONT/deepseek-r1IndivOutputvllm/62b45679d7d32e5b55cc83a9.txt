

To solve this problem, we need to generate a space-separated string of argument flags from an argparse.ArgumentParser instance. Each flag in the string should include its name and default value, formatted as '--name value'.

### Approach
1. **Extract Flags and Defaults**: Use the `get_flags()` method of the argparse.ArgumentParser instance to retrieve a list of tuples. Each tuple contains the argument string (e.g., '--arg') and the default value for that argument.
2. **Process Each Flag**: For each tuple, split the argument string to separate the flag name from the '--'. This allows us to reconstruct the flag in the correct format.
3. **Format the Flags**: Construct each flag string in the format '--name value', where 'name' is the flag name and 'value' is the default value.
4. **Join Flags into String**: Combine all formatted flag strings into a single space-separated string.

### Solution Code
```python
def parser_flags(parser):
    """
    Given an argparse.ArgumentParser instance, return its argument flags in a space-separated
    string.
    """
    return ' '.join(['--' + name.split('--')[1] + ' ' + str(value) for name, value in parser.get_flags().items()])
```

### Explanation
- **Extracting Flags and Defaults**: The `get_flags()` method returns a list of tuples where each tuple contains an argument string and its default value. For example, if the parser has an argument '--arg' with a default value of 0, the tuple will be ('--arg', 0).
- **Processing Each Flag**: Each argument string is split into parts using '--' as the delimiter. The part after '--' is the flag name. For example, '--arg' becomes ['','arg'], so we take the second part 'arg'.
- **Formatting Flags**: Each flag is formatted as '--name value'. For the example above, this results in '--arg 0'.
- **Joining Flags**: All formatted flag strings are joined into a single string with spaces separating each flag.

This approach ensures that we correctly extract and format each argument flag, providing a clear and concise string representation of the parser's arguments.