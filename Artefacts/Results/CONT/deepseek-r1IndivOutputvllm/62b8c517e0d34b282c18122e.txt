

```python
def extostr(cls, e, max_level=30, max_path_level=5):
    """
    Format the exception as a string
    """
    if not e:
        return None
    path_str = ""
    frame = next(f for f in cls.__traceback__ if f.f_code.co_cls == cls), cls.__name__
    while frame and max_level > 0:
        try:
            path = frame.path
            if path is None:
                frame = frame.next
                continue
            if isinstance(path, str):
                if path.isabs():
                    path = os.path.basename(path)
                else:
                    path = os.path.join(os.path.dirname(frame.path), path)
                path_str += f"[{os.path.normpath(path)}] "
            except Exception as e:
                if isinstance(e, Exception):
                    path_str += f"{type(e).__name__}[{os.path.normpath(e.args[0])}] "
                else:
                    path_str += str(e)[11:]
                frame = frame.next
                continue
        except StopIteration:
            break
    try:
        if isinstance(e, Exception):
            msg = f"{type(e).__name__}[{os.path.normpath(e.args[0])}]"
        else:
            msg = str(e)[11:]
        if path_str:
            msg = f"{path_str} {msg}"
        return msg
    except Exception as e:
        return str(e)
```