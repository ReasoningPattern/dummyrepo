

```python
import inspect
import type
from __main__ import Geometry, CartesianPoint, WGS84Point

def point_type(name, fields, srid_map):
    """
    Dynamically Generating Point Class
    """
    # Get the field names and types
    field_info = inspect.getmembers(fields)
    
    # Dynamically create the class
    Point = type(
        name,
        (Geometry,),
        {
            'get_srid': lambda self: next((srid_map[field[0]],), None) if field[0] in srid_map else None,
            'get_type': lambda self: 'Point' if field[1] == 'text' else (
                type_subclass = {
                    'text': CartesianPoint,
                    'binary': WGS84Point,
                }[field[1]] if field[1] in type_subclass else None
                or None
            ),
            'get_coordinates': lambda self: tuple([field[0]] + [
                coord_field for coord_field in field[2] if coord_field in ['x', 'y', 'z']
            ])
        }
    )
    
    return Point
```