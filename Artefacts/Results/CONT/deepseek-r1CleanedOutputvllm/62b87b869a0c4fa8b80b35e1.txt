def hist_to_graph(hist, make_value=None, get_coordinate="left",
                  field_names=("x", "y"), scale=None):
    """
    Convert a :class:`.histogram` to a :class:`.graph`.

    Parameters
    ----------
    hist : histogram
        The histogram to convert.
    make_value : callable, optional
        A function to set the value of a graph's point. By default it is bin content.
    get_coordinate : str, optional
        Defines what the coordinate of a graph point created from a histogram bin will be.
        Can be "left" (default), "right" and "middle").
    field_names : tuple, optional
        Set field names of the graph. Their number must be the same as the dimension of the result.
    scale : bool, optional
        If True, it uses the histogram scale.

    Returns
    -------
    graph : list
        List of graph points.
    """
    graph = []
    for bin in hist.bins:
        # Get the center coordinate of the bin
        if get_coordinate == "left":
            x = bin.lower_edge
        elif get_coordinate == "right":
            x = bin.upper_edge
        elif get_coordinate == "middle":
            x = (bin.lower_edge + bin.upper_edge) / 2
        else:
            raise ValueError("Invalid get_coordinate value")
        
        # Determine the value to make
        if make_value is None:
            value = bin content
        else:
            value = make_value(bin)
        
        # Handle the value (could be scalar or tuple)
        if isinstance(value, tuple):
            val, err = value
        else:
            val = value
            err = None
        
        # Create the graph point
        graph_point = (x,) + tuple([val, err] if err is not None else [val] for _ in field_names)
        graph.append(graph_point)
    
    return graph