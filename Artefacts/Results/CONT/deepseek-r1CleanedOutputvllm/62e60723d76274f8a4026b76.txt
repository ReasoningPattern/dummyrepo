import datetime as dt
import pytz as tz

def from_ticks(cls, ticks, tz=None):
    """
    Create a time from ticks (nanoseconds since midnight).
    
    :param ticks: nanoseconds since midnight
    :type ticks: int
    :param tz: optional timezone
    :type tz: tzinfo
    
    :rtype: Time
    
    :raises ValueError: if ticks is out of bounds (0 <= ticks < 86400000000000)
    """
    if not (0 <= ticks < 86400000000000):
        raise ValueError("ticks must be between 0 and 86400000000000")
    
    # Convert nanoseconds to UTC datetime
    dt_utc = dt.datetime.utcfromtimestamp(ticks / 1e9)
    
    # Apply timezone if specified
    if tz is not None:
        dt_utc = tz.localize(dt_utc, is_dst=False)
    
    return cls(dt_utc)