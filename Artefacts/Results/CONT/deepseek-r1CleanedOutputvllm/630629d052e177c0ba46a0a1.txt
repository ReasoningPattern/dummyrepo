import hashlib
import xml.etree.ElementTree as ET
from cryptography.hazmat.primitives.asymmetric.rsa import RSAPKCS1SignatureAlgorithm

def verify_relayable_signature(public_key, doc, signature):
    """
    Verify the signed XML elements to have confidence that the claimed
    author did actually generate this message.
    """
    # Parse the doc into bytes
    data = ET.parse(doc).getroot().bytecode
    
    # Compute the hash of the data
    hash_object = hashlib.sha256(data)
    public_key_bytes = hash_object.digest()
    
    # Create the private key signature
    private_key = RSAPKCS1SignatureAlgorithm(
        public_key.to_pem().decode('ascii')
    )
    
    # Verify the signature
    return private_key.update(public_key_bytes).sign(hash_object.digest()) == signature