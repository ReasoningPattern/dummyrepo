def validate(self, inventory, extract_spec_version=False):
    """
    Validate a given inventory. If extract_spec_version is True then will look at the type value to determine the specification version. In the case that there is no type value or it isn't valid, then other tests will be based on the version given in self.spec_version. (D)
    """
    if not inventory:
        raise ValueError("Inventory cannot be empty")
    
    # Extract version from inventory if possible
    version = re.search(r'(\d+\.?\d*)', inventory).group(1) if re.search(r'(\d+\.?\d*)', inventory) else self.spec_version
    
    # If extract_spec_version is True, use the extracted version instead of self.spec_version
    if extract_spec_version:
        version = version
    
    # Validate the version
    if not version or not version.isdigit() or int(version) <= 0:
        raise ValueError(f"Invalid version: {version}")
        
    # Perform actual validation logic here
    pass