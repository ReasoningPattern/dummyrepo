import logging
import requests
from typing import Any
from datetime import datetime
from uuid import uuid4
from calendar import timegm
from urllib.parse import urlparse, parse_qs, urlencode, parse_url
from socket import socket, error as socket_error
from requests.auth import AuthBase
from requests.packages.urllib3 import response as urllib3_response
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import logging
import time

def send_document(url: str, data: Any, timeout: int = 10, method: str = "post", *args, **kwargs) -> Any:
    """
    Send a response containing data through the POST method.
    
    Args:
        url (str): The URL to send the request to.
        data (Any): The data to send in the request body.
        timeout (int): The timeout in seconds for the request. Defaults to 10.
        method (str): The HTTP method to use. Defaults to "post".
        *args: Additional positional arguments.
        **kwargs: Additional keyword arguments.
        
    Returns:
        Any: The response object.
        
    Raises:
        ValueError: If the status code is not in the 200-299 range.
    """
    session = requests.Session()
    try:
        response = session.post(
            url,
            data=data,
            timeout=timeout,
            method=method,
            *args,
            **kwargs
        )
        response.raise_for_status()
        
        log_entry = f"[{datetime.now().isoformat()}] POST {url} Response Status: {response.status_code} ({response.text})"
        logging.info(log_entry)
        
        if response.status_code < 200 or response.status_code >= 300:
            raise ValueError(f"Request failed with status code {response.status_code}. Response: {response.text}")
            
        return response
    except requests.exceptions.RequestException as e:
        logging.error(f"Request failed: {str(e)}")
        raise ValueError(f"Request failed: {str(e)}")
    finally:
        session.close()