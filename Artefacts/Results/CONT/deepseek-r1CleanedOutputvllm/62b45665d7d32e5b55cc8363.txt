import argparse
from collections import defaultdict

def make_parsers():
    """
    Build a parser and its subparsers and return them as a tuple.
    """
    main_parser = argparse.ArgumentParser()
    subparsers = []

    for alias, title in SUBPARSER_ALIASES:
        subparser = argparse.ArgumentParser(add_subparsers=True, title=title, description=alias, required=True)
        subparser.set_description(alias)
        subparser.set help(f"Use {alias} (short: {arg._getopt short_name() if hasattr(arg, '_getopt short_name') else ''})")
        subparser.add_argument('--' + alias, help=f"Use {alias} (short: {alias})")
        subparsers.append(subparser)
    
    main_parser.add_subparsers(help='Choose a subparser', dest='parser', action='append', required=True)
    main_parser.set_defaults(func=lambda args: None)

    return main_parser, tuple(subparsers)