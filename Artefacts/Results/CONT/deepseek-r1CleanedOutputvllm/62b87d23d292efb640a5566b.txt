import os
import subprocess
import re
import sys
import typing
import errno

def run_command(commands: typing.Union[str, list[str]], args: typing.Union[str, list[str]], cwd: str | None = None, verbose: bool = False, hide_stderr: bool = False, env: typing.Optional[dict[str, str]] = None) -> None:
    """
    Call the given command(s).
    """
    if not commands:
        return
    
    commands = [item for item in commands if item != []]
    
    if isinstance(cwd, str):
        current_cwd = cwd
    else:
        current_cwd = os.getcwd()
    
    env_dict = os.environ.copy()
    if env:
        env_dict.update(env)
    
    for command in commands:
        if isinstance(command, list):
            cmd = ' '.join(command)
        else:
            cmd = command
        
        if verbose:
            print(f'Running command: {cmd}')
        
        result = subprocess.run(
            cmd,
            shell=True,
            cwd=current_cwd,
            env=env_dict,
            capture_output=True,
            text=True
        )
        
        if result.returncode != 0:
            if not hide_stderr:
                print(f'Error running command "{cmd}":')
                print(result.stderr)
            print(f'Output: {result.stdout}')
            continue
        
        print(f'Successfully ran command "{cmd}"')