import yaml
from collections.abc import Mapping, Sequence

def _dump_string(obj, dumper=None):
    if dumper is None:
        dumper = yaml.FullDumper
    if isinstance(obj, str):
        yield 'str'
        yield obj
    elif isinstance(obj, Mapping):
        for key, value in obj.items():
            yield '- ' + _dump_string(key, dumper=dumper) + ':' + _dump_string(value, dumper=dumper)
    elif isinstance(obj, Sequence):
        for value in obj:
            yield _dump_string(value, dumper=dumper)
    elif hasattr(obj, '__dict__'):
        yield type(obj).__name__
        yield from _dump_string(obj.__dict__, dumper=dumper)
    else:
        yield type(obj).__name__
        yield obj