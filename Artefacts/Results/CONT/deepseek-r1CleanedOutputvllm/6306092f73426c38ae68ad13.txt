import tempfile
import os
import subprocess

def ansible_playbook(ir_workspace, ir_plugin, playbook_path, verbose=None,
                     extra_vars=None, ansible_args=None):
    """
    Wraps the 'ansible-playbook' CLI.

    :param ir_workspace: An Infrared Workspace object represents the active
    workspace
    :param ir_plugin: An InfraredPlugin object of the current plugin
    :param playbook_path: the playbook to invoke
    :param verbose: Ansible verbosity level
    :param extra_vars: dict. Passed to Ansible as extra-vars
    :param ansible_args: dict of ansible-playbook arguments to plumb down
    directly to Ansible.
    """
    # Create a temporary file to capture output
    tmp_file = tempfile.mkstemp()[1]
    
    # Prepare the command line arguments
    args = [playbook_path]
    if verbose is not None:
        args.extend(['-v'] * verbose)
    
    # Add any additional ansible arguments
    if ansible_args:
        args.extend(ansible_args.values())
    
    # Run the ansible-playbook command
    result = subprocess.run(args, shell=True,
                            capture_output=True,
                            text=True,
                            check=False)
    
    # Return the output and exit code
    return (result.returncode, result.stdout, result.stderr)