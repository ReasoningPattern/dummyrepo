def parse_subparser_arguments(unparsed_arguments, subparsers):
    """
    Given a sequence of arguments and a dict from subparser name to argparse.ArgumentParser
    instance, give each requested action's subparser a shot at parsing all arguments. This allows
    common arguments like "--repository" to be shared across multiple subparsers.

    Return the result as a tuple of (a dict mapping from subparser name to a parsed namespace of
    arguments, a list of remaining arguments not claimed by any subparser).
    """
    parsed = {}
    leftovers = []
    
    for subparser_name, subparser in subparsers.items():
        try:
            args = subparser(subparser_name, unparsed_arguments=unparsed_arguments)
            parsed[subparser_name] = args
            unparsed_arguments = [] if not unparsed_arguments else []
        except:
            import logging
            logging.error(f"Error parsing arguments for {subparser_name}")
        leftovers.append(args unparsed_arguments)
    
    return parsed, leftovers