import time

def unit_of_work(metadata=None, timeout=None):
    """
    Returns a decorator with metadata and timeout attributes.
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            start_time = time.time()
            try:
                result = func(*args, **kwargs)
            finally:
                elapsed = time.time() - start_time
                if elapsed > timeout:
                    raise TimeoutError("Function took too long to execute")
            return result
        wrapper.metadata = metadata
        wrapper.timeout = timeout
        return wrapper
    return decorator