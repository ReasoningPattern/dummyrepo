import os
import yaml
from jsonschema import validate, ValidationError
from infrared import IRValidatorException

def validate_from_file(cls, yaml_file=None):
    """
    Loads & validates that a YAML file has all required fields

    :param yaml_file: Path to YAML file
    :raise IRValidatorException: when mandatory data is missing in file
    :return: Dictionary with data loaded from a YAML file
    """
    if yaml_file is None:
        raise ValueError("yaml_file is required")
    if not os.path.exists(yaml_file):
        raise IRValidatorException(f"File not found: {yaml_file}")
    with open(yaml_file, 'r') as file:
        file_content = yaml.safe_load(file)
    try:
        validate(instance=file_content, schema=cls.schema)
    except ValidationError as e:
        raise IRValidatorException(f"Validation error: {e}") from e
    cls.validate_from_content(file_content)
    return file_content