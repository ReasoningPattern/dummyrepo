

```python
import os
import linecache

class SomeClass:
    def extostr(cls, e, max_level=30, max_path_level=5):
        tb = e.__traceback__
        frames = []
        while tb is not None and max_level > 0:
            frames.append(tb)
            tb = tb.tb_next
            max_level -= 1
        lines = []
        for tb in frames:
            filename = tb.tb_frame.f_code.co_filename
            parts = filename.split(os.path.sep)
            if max_path_level > 0:
                num = max_path_level
                if len(parts) > num:
                    parts = parts[-num:]
            filename = os.path.sep.join(parts)
            lineno = tb.tb_lineno
            funcname = tb.tb_frame.f_code.co_name
            line = linecache.getline(filename, lineno, tb.tb_frame.f_globals.get('__file__')).strip()
            lines.append(f'  File "{filename}", line {lineno}, in {funcname}\n    {line}')
        msg = f'{type(e).__name__}: {str(e)}\n'
        for line in lines:
            msg += line
        return msg
```