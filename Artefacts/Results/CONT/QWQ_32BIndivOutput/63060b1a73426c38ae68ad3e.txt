

```python
import yaml
from pathlib import Path

def get_plugin_spec_flatten_dict(plugin_dir):
    def flatten_dict(d, parent_key='', sep='.'):
        items = []
        for k, v in d.items():
            new_key = f"{parent_key}{sep}{k}" if parent_key else k
            if isinstance(v, dict):
                items.extend(flatten_dict(v, new_key, sep=sep).items())
            else:
                items.append((new_key, v))
        return dict(items)
    
    result = {}
    plugin_path = Path(plugin_dir)
    
    files = [
        ('plugin.yaml', 'yaml'),
        ('package.yaml', 'yaml'),
        ('requirements.txt', 'txt')
    ]
    
    for filename, filetype in files:
        path = plugin_path / filename
        if not path.exists():
            continue
        
        if filetype == 'yaml':
            with path.open() as f:
                data = yaml.safe_load(f)
                if data is not None:
                    flat_data = flatten_dict(data)
                    result.update(flat_data)
        elif filetype == 'txt':
            with path.open() as f:
                reqs = [line.strip() for line in f if line.strip()]
                result['requirements'] = reqs
    
    return result
```