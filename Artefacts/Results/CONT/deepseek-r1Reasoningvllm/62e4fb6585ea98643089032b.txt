Okay, I need to write a Python function called parse_version that takes a string and returns a tuple of integers. The string is a version code separated by dots, like "1.2.3". 

First, I'll think about how to split the string. The split method with '.' as the delimiter should work. So, s.split('.') will give me a list of strings like ['1', '2', '3'].

Next, I need to convert each of these string parts into integers. Using a list comprehension, I can loop through each part in the list and convert them. So, [int(part) for part in parts].

Putting it all together, the function will split the string, convert each part, and return the resulting tuple. I should make sure that the input string is valid, but since the problem doesn't specify error handling, I'll assume the input is correctly formatted.

So the function will look like this: split the string into parts, convert each to int, and return as a tuple. That should satisfy the requirements.
