Alright, I need to generate Python code based on the given function signature and docstring. The function is called list_of_file_names and it takes two arguments: settings_dirs and spec_option. The docstring says it's creating and returning a new IniType complex type via cli.ListOfFileNames(). 

First, I remember that in the infrared package, the cli.ListOfFileNames() function is used to create a type that lists files and directories. It's a subclass of complex type. So, I need to define a new class that inherits from complex_type.

Looking at the imports, I see that os and pytest are imported, but I don't think I need to import anything else since the function is supposed to return the type directly.

The function should return an instance of this new class. So, I'll define the class inside the function. The class should take two parameters: settings_dirs and spec_option. 

I recall that complex_type can take a name parameter for the type name. So, I'll set the name to something meaningful, maybe 'FileDirectories'. 

Putting it all together, the function will create an instance of this class and return it. 

I should make sure the code is clean and follows good practices. No unnecessary imports, just the ones needed. 

So, the code will have the function, inside it define the new class with the parameters, and return self. 

I think that's all. Now, I'll write the code accordingly.
