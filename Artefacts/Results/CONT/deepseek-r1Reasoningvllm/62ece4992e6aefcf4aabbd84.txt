Okay, I need to write a Python function called is_ipv4 that checks if a given target is a valid IPv4 address. The function should return a boolean: True if it's an IPv4, False otherwise. The docstring is already provided, so I'll make sure to include that.

First, I remember that Python has the ipaddress module which can handle IPv4 addresses. So, I should import ipaddress. Wait, the user mentioned that the imported packages are ipaddress, so I don't need to worry about importing anything else.

Next, I think about how to check if the target is an IPv4 address. The ipaddress module has a function called ip_address which can validate an address. So, I'll use that. But wait, I should also make sure that the target is a string. Because if someone passes a number or another type, it shouldn't be considered an IPv4 address.

So, the function should first check if the target is a string. I'll add an if statement: if not isinstance(target, str), return False.

Then, I'll try to create an IPv4Address object using ipaddress.IPv4Address(target). If this doesn't raise a ValueError, it means the target is a valid IPv4 address, so I return True. Otherwise, return False.

Putting it all together, the function will look like this. I'll structure it with the docstring as provided. I'll make sure to handle cases where the target is not a string by immediately returning False. Then, attempt to create the IPv4Address and check for exceptions.

I think that's all. Let me write the code accordingly.
