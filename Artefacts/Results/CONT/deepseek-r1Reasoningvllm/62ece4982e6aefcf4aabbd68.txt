Okay, I need to write a Python function called int_to_string that converts a number into a string using a given alphabet. The function signature is provided, so I should start by understanding what each parameter does.

The function takes a number, which is an integer, an alphabet which is a list of strings, and an optional padding parameter. The output should be a string where the number is represented in the given alphabet, with the most significant digit first. 

First, I should think about how to convert the number into the desired string format. Since the number represents a short UUID, it's probably a base-36 or similar encoding. The alphabet provided will determine the base. For example, if the alphabet has 36 characters, each digit represents a base-36 value.

I'll need to handle the case where the number is zero. In that case, the function should return the first character of the alphabet, as per UUID specifications.

Next, I'll consider the padding parameter. If padding is provided, the resulting string should be padded with the least significant characters of the alphabet to reach the specified length. If padding isn't provided, the function should determine the minimum necessary length based on the number's value.

I should also ensure that the function handles invalid inputs gracefully. For instance, if the number is negative, it should raise a ValueError. Similarly, if the alphabet is empty, that's also an error.

Now, let's outline the steps:

1. Check if the alphabet is empty or the number is negative. If either is true, raise an appropriate error.
2. If the number is zero, return the first character of the alphabet.
3. Initialize an empty list to build the result string.
4. Loop through the number, repeatedly taking the modulus of the alphabet length to find the current digit, then divide the number by the alphabet length.
5. For each digit found, append the corresponding character from the alphabet to the result list.
6. If padding is specified, calculate how many padding characters are needed and append the necessary number of the first character in the alphabet.
7. Reverse the result list to get the most significant digit first and join it into a string.

I should also test the function with some examples to make sure it works correctly. For instance, if the alphabet is '01', the number 5 would be '11', and with padding=3, it should be '110'.

Wait, actually, in UUIDs, the encoding is typically done with a specific alphabet, but the function allows any custom alphabet. So, the function should work regardless of the alphabet's length, as long as it's valid.

I think I've covered all the cases. Now, I'll write the code step by step, making sure to handle each case properly.
