def find_roots(
    graph: "Graph", prop: "URIRef", roots: Optional[Set["Node"]] = None
) -> Set["Node"]:
	"""
	 Find the roots in some sort of transitive hierarchy.

    find_roots(graph, rdflib.RDFS.subClassOf)
    will return a set of all roots of the sub-class hierarchy

    Assumes triple of the form (child, prop, parent), i.e. the direction of
    RDFS.subClassOf or SKOS.broader

    Args:
        graph: Graph Class Object
        prop: URIRef Class Object
        roots: Optional list with set type

    Return:
        roots: a set with nodes
	"""
	roots = set()
	for node in graph.subjects():
		has_parent = False
		for triple in graph.triples((node, prop, _)):
			has_parent = True
			break
		if not has_parent:
			roots.add(node)
	return roots