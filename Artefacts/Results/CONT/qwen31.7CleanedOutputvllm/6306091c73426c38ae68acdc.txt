import os
import jsonschema
import six
import infrared
import yaml

class IRValidator:
    @classmethod
    def validate_from_content(cls, spec_content=None):
        if spec_content is None:
            raise IRValidatorException("Mandatory data is missing in spec file")
        try:
            data = yaml.safe_load(spec_content)
        except yaml.YAMLError as e:
            raise IRValidatorException(f"Invalid YAML content: {e}")
        required_fields = ['spec', 'data']
        for field in required_fields:
            if field not in data:
                raise IRValidatorException(f"Mandatory field {field} is missing")
        return data