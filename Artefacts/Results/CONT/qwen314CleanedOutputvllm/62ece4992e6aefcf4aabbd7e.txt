import os

def _resolve_string(matcher):
    """
    Get the value from environment given a matcher containing a name and an optional default value in its group dict.
    If the variable is not defined in environment and no default value is provided, an Error is raised.
    """
    groups = matcher.groupdict()
    name = groups['name']
    default = groups.get('default')
    value = os.environ.get(name)
    if value is not None:
        return value
    elif default is not None:
        return default
    else:
        raise KeyError(f"Environment variable {name} not found and no default provided")