import ruamel.yaml

def deep_merge_nodes(nodes):
    """
    Merge any node values corresponding to duplicate keys and return the result. If there are colliding keys with non-MappingNode values, the last of the values remains.
    """
    result = {}
    for node in nodes:
        key = node.key
        value = node.value
        if key not in result:
            result[key] = value
        else:
            existing = result[key]
            if isinstance(existing, ruamel.yaml.nodes.MappingNode) and isinstance(value, ruamel.yaml.nodes.MappingNode):
                merged = deep_merge_nodes(existing.value + value.value)
                result[key] = ruamel.yaml.nodes.MappingNode(existing.tag, merged)
            else:
                result[key] = value
    return result