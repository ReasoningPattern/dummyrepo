
Okay, I need to write a Python function called _replace_register based on the given signature and docstring. Let me think about what the function is supposed to do.

The docstring says that the function should replace the value of flow_params[register_number] with flow_params[register_value] and then delete flow_params[register_value]. So, first, I need to access the register_number key in flow_params and set its value to whatever is in register_value. Then, I have to remove the register_value key from the flow_params dictionary.

Wait, but flow_params is probably a dictionary here. So, the steps are:

1. Take the value from flow_params at register_value.
2. Assign that value to flow_params[register_number].
3. Delete the key register_value from flow_params.

But I need to make sure that register_value is a key that exists in flow_params. However, the problem statement doesn't mention error checking, so maybe we assume that the keys are valid.

So the code would be something like:

flow_params[register_number] = flow_params[register_value]
del flow_params[register_value]

But wait, what if register_number is the same as register_value? Then, after assigning, we delete the same key. That would result in the key being removed. But the original intention might be to replace the value of register_number with the value of register_value and then delete register_value. If they are the same, then after assignment, deleting would remove the key. But maybe that's intended.

So the code is straightforward. Let me write that.

The function parameters are flow_params, register_number, register_value. The function modifies flow_params in place. So the code inside the function would be:

flow_params[register_number] = flow_params[register_value]
del flow_params[register_value]

That's it. I think that's all. Let me check if there's any edge cases. For example, if register_value is not present, this would throw a KeyError. But the problem doesn't mention handling that, so the code is correct as per the given docstring.
