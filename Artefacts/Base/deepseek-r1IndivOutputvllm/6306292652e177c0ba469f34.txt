

To solve this problem, we need to create a Python function that determines the appropriate Content-Type header based on the given URL and returns it. The function should also consider a user agent to mimic a real user's request.

### Approach
1. **Problem Analysis**: The task is to determine the Content-Type header for a given URL. The Content-Type header is crucial for web requests to specify the type of data being sent. Common content types include `text/html` for HTML files, `application/pdf` for PDF files, and `application/octet-stream` for other types of data.
2. **URL Analysis**: By examining the URL's suffix (the part after the last dot), we can infer the content type. For example, URLs ending in `.html` typically have a `text/html` content type, while those ending in `.txt` have a `text/plain` content type. If no known extension is found, the default content type is `application/octet-stream`.
3. **User Agent**: To make the request appear more realistic, we include a user agent string. This string is used to identify the browser or user making the request.
4. **Implementation**: The function will check the URL's suffix against a list of known extensions and return the corresponding content type. If no extension is found, it defaults to `application/octet-stream`.

### Solution Code
```python
import re
from typing import Optional

def fetch_content_type(url: str) -> Optional[str]:
    """
    Determine the appropriate Content-Type header based on the URL and return it.
    """
    user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    
    content_type = "application/octet-stream"
    match = re.search(r'\.([a-zA-Z]+)\.', url)
    if match:
        ext = match.group(1)
        if ext in ['html', 'txt', 'pdf', 'docx', 'xlsx']:
            if ext == 'html':
                content_type = 'text/html'
            elif ext == 'txt':
                content_type = 'text/plain'
            elif ext == 'pdf':
                content_type = 'application/pdf'
            elif ext == 'docx':
                content_type = 'application/msword'
            elif ext == 'xlsx':
                content_type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    
    return content_type
```

### Explanation
1. **Import Statements**: The function imports the `re` module for regular expression operations and the `Optional` type from the `typing` module to handle potential `None` return values.
2. **User Agent Definition**: A user agent string is defined to mimic a web browser's user agent, making the request appear more realistic.
3. **Content Type Initialization**: The default content type is set to `application/octet-stream`.
4. **URL Extension Check**: Using a regular expression, the function checks if the URL ends with a known file extension. If a match is found, the corresponding content type is assigned.
5. **Return Content Type**: The function returns the determined content type based on the URL's extension or the default type if no extension is found.

This approach ensures that the function accurately determines the appropriate Content-Type header for a given URL, enhancing the realism of web requests by including a user agent and correctly inferring the content type based on common file extensions.