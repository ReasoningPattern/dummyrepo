

To solve this problem, we need to write a Python function called `strip_root` that removes a specified root directory from a given path. If the path does not start with the root, or if removing the root results in an empty path, the function should raise an exception.

### Approach
1. **Check for Empty Root**: If the root is an empty string, raise a `ValueError` since we cannot strip an empty root.
2. **Check if Path Starts with Root**: Use the `startswith` method to determine if the path begins with the root directory.
3. **Handle Special Case for Root '/':** If the root is '/' and the path is exactly '/', removing the root would result in an empty string, which is invalid. Thus, raise a `ValueError` in this case.
4. **Slice the Path**: If the path starts with the root, slice the path from the length of the root. If the resulting path is empty, raise a `ValueError`.
5. **Raise Exception for Non-Start**: If the path does not start with the root, raise a `ValueError`.

### Solution Code

```python
def strip_root(path, root):
    if not root:
        raise ValueError("Root cannot be empty.")
    if path.startswith(root):
        if root == '/' and path == '/':
            raise ValueError("Cannot strip root from '/' as it results in an empty path.")
        stripped = path[len(root):]
        if not stripped:
            raise ValueError("Stripping root results in empty path.")
        return stripped
    else:
        raise ValueError("Path does not start with root.")
```

### Explanation
- **Empty Root Check**: The function first checks if the root is an empty string and raises an error if true.
- **Path Start Check**: It then checks if the path starts with the root using the `startswith` method.
- **Special Case Handling**: For the root being '/' and the path being '/', the function raises an error because stripping the root results in an empty string.
- **Slicing the Path**: If the path starts with the root, it slices the path from the length of the root. If the resulting path is empty, it raises an error.
- **Exception for Non-Start**: If the path does not start with the root, the function raises an error indicating that the root cannot be stripped.

This approach ensures that all edge cases are handled, including special directory structures and invalid results after stripping the root.