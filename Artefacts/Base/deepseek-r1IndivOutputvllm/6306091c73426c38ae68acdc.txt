

```python
from collections import defaultdict
import yaml

def validate_from_content(cls, spec_content=None):
    """
    validates that spec (YAML) content has all required fields
    
    :param spec_content: content of spec file
    :raise IRValidatorException: when mandatory data
    is missing in spec file
    :return: Dictionary with data loaded from a spec (YAML) file
    """
    if spec_content is None or len(spec_content.strip()) == 0:
        raise ValueError("Spec content cannot be empty or None")
    
    try:
        loaded_data = yaml.safe_load(spec_content)
    except yaml.YAMLError as e:
        raise ValueError(f"Invalid YAML content: {str(e)}")
    
    required_fields = cls.required_fields
    for field in required_fields:
        if field not in loaded_data or not loaded_data[field]:
            raise IRValidatorException(f"Required field '{field}' is missing or empty")
    
    return loaded_data
```