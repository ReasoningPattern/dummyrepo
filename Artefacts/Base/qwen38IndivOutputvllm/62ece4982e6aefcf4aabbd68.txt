

```python
from typing import List, Optional

def int_to_string(number: int, alphabet: List[str], padding: Optional[int] = None) -> str:
    """
    Convert a number to a string, using the given alphabet.
    The number represents a short uuid.
    The output has the most significant digit first.
    @param number: Int value
    @param alphabet : List with letters
    @param padding : Optional with int value
    @return  string value corresponded to int
    """
    base = len(alphabet)
    if base == 0:
        raise ValueError("Alphabet cannot be empty")
    if base == 1:
        if number == 0:
            return alphabet[0] * (padding if padding is not None else 1)
        else:
            return alphabet[0] * number
    if number == 0:
        return alphabet[0] * (padding if padding is not None else 1)
    digits = []
    while number > 0:
        remainder = number % base
        digits.append(alphabet[remainder])
        number = number // base
    digits = digits[::-1]
    result = ''.join(digits)
    if padding is not None:
        if len(result) < padding:
            result = alphabet[0] * (padding - len(result)) + result
    return result
```