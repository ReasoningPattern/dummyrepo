

```python
import re
from typing import Tuple, Set, Callable

def find_tags(text: str, replacer: Callable = None) -> Tuple[Set, str]:
    """
    Find tags in text.

    Tries to ignore tags inside code blocks.

    Optionally, if passed a "replacer", will also replace the tag word with the result
    of the replacer function called with the tag word.

    Returns a set of tags and the original or replaced text.
    """
    tags = set()
    parts = re.split(r'```.*?```', text, flags=re.DOTALL)
    processed_parts = []
    for i, part in enumerate(parts):
        if i % 2 == 0:
            def replace_tag(match):
                content = match.group(1)
                tags.add(content)
                if replacer is not None:
                    return replacer(content)
                else:
                    return match.group(0)
            processed_part = re.sub(r'<([^>]*)>', replace_tag, part)
            processed_parts.append(processed_part)
        else:
            processed_parts.append(part)
    modified_text = ''.join(processed_parts)
    return (tags, modified_text)
```