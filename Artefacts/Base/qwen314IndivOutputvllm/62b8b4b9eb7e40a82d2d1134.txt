

```python
def namesAndDescriptions(self, all=False):
    """
    Returns the name and description of the current class attribute.
    """
    attributes = []
    if all:
        for base in self.__class__.__mro__:
            for name, value in base.__dict__.items():
                if not name.startswith('__') and not callable(value):
                    description = getattr(value, '__doc__', None)
                    if description:
                        attributes.append((name, description))
    else:
        for name, value in self.__class__.__dict__.items():
            if not name.startswith('__') and not callable(value):
                description = getattr(value, '__doc__', None)
                if description:
                    attributes.append((name, description))
    return attributes
```