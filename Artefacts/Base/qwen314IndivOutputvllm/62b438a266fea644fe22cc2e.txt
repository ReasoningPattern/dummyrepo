

```python
import argparse

def parse_arguments(*unparsed_arguments):
    """
    Given command-line arguments with which this script was invoked, parse the arguments and return
    them as a dict mapping from subparser name (or "global") to an argparse.Namespace instance.
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='command', help='Available commands')
    global_parser = argparse.ArgumentParser(add_help=False)
    global_parser.add_argument('--global-arg', type=str, help='A global argument')
    parser.add_argument('--global-arg', type=str, help='A global argument', nargs='?', const=True, default=None)
    parser.add_argument('--subcommand', choices=subparsers.choices.keys(), help='Select a subcommand')
    args = parser.parse_args(unparsed_arguments)
    result = {'global': args}
    if args.command:
        result[args.command] = args
    return result
```