

```python
import datetime
from dateutil import tz

def isoparse(self, dt_str):
    if 'T' not in dt_str:
        raise ValueError("Invalid ISO-8601 string")
    date_part, time_part = dt_str.split('T', 1)
    
    # Parse date part
    date = None
    for fmt in ["%Y", "%Y-%m", "%Y%m", "%Y-%m-%d"]:
        try:
            date = datetime.datetime.strptime(date_part, fmt)
            break
        except ValueError:
            continue
    else:
        raise ValueError("Invalid date format")
    
    # Parse time part
    if '+' in time_part:
        time_str, tz_str = time_part.split('+', 1)
        tz_str = tz_str.strip()
    elif '-' in time_part:
        time_str, tz_str = time_part.split('-', 1)
        tz_str = tz_str.strip()
    else:
        time_str = time_part
        tz_str = 'Z'
    
    # Parse time
    time = None
    if len(time_str) == 2:
        time = datetime.datetime.strptime(time_str, "%H")
    elif len(time_str) == 4:
        time = datetime.datetime.strptime(time_str, "%H%M")
    elif len(time_str) == 6:
        time = datetime.datetime.strptime(time_str, "%H%M%S")
    elif len(time_str) == 8:
        time = datetime.datetime.strptime(time_str, "%H%M%S.%f")
    else:
        raise ValueError("Invalid time format")
    
    # Parse timezone
    tz_obj = None
    if tz_str == 'Z':
        tz_obj = tz.tzutc()
    elif tz_str == '+00:00':
        tz_obj = tz.tzutc()
    elif tz_str == '-00:00':
        tz_obj = tz.tzutc()
    else:
        hours, minutes = map(int, tz_str.split(':'))
        tz_obj = tz.tzoffset(None, hours * 3600 + minutes * 60, 0)
    
    # Combine date and time
    date_time = datetime.datetime.combine(date, time)
    date_time = date_time.replace(tzinfo=tz_obj)
    return date_time
```