

```python
def parse_subparser_arguments(unparsed_arguments, subparsers):
    """
    Given a sequence of arguments and a dict from subparser name to argparse.ArgumentParser
    instance, give each requested action's subparser a shot at parsing all arguments.
    This allows common arguments like "--repository" to be shared across multiple subparsers.

    Return the result as a tuple of (a dict mapping from subparser name to a parsed namespace of
    arguments, a list of remaining arguments not claimed by any subparser).
    """
    parsed_dict = {}
    remaining_args = []
    for arg in unparsed_arguments:
        for subparser_name, subparser in subparsers.items():
            if arg.startswith(f'--{subparser_name}'):
                namespace = subparser.parse_args([arg])
                parsed_dict[subparser_name] = namespace
                remaining_args.remove(arg)
                break
        else:
            remaining_args.append(arg)
    return (parsed_dict, remaining_args)
```