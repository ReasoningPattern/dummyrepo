def _resolve_string(matcher):
	"""
	Get the value from environment given a matcher containing a name and an optional default value in its group dict.
	If the variable is not defined in environment and no default value is provided, an Error is raised.
	"""
	env = {}  # Assuming environment is available as a dictionary
	groups = matcher.get('groups', {})
	name = groups.get('name')
	default = groups.get('default')
	
	if name not in env:
		if default is None:
			raise ValueError(f"Variable {name} not found in environment")
		else:
			return default
	else:
		return env[name]