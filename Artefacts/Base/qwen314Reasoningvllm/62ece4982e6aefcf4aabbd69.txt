
Okay, I need to write a Python function called _replace_register that takes three parameters: flow_params, register_number, and register_value. The docstring says that the function should replace the value of flow_params[register_number] with the value of flow_params[register_value] and then delete flow_params[register_value]. 

First, I should check what flow_params is. It's probably a dictionary since it's using bracket notation. So, the function is supposed to take a dictionary and two keys. The goal is to take the value from register_value and assign it to register_number, then remove the register_value key from the dictionary.

Wait, but what if register_number or register_value are not in the dictionary? The problem statement doesn't mention handling that, so maybe we assume they exist. But maybe I should check? Hmm, the docstring doesn't specify error handling, so perhaps the function is intended to work under the assumption that both keys are present. So I don't need to handle KeyErrors here.

So the steps are: 
1. Get the value from register_value in flow_params.
2. Assign that value to register_number in flow_params.
3. Delete the register_value key from flow_params.

Let me think about the order. If I first get the value, then assign it, then delete. But if the register_value is the same as register_number, that would cause a problem. Like, if someone tries to replace a register with itself. But again, the docstring doesn't mention this, so maybe it's allowed. However, in that case, when we delete register_value, which is the same as register_number, we would be deleting the key that was just updated. Wait, no. Let's say register_number is 5 and register_value is 5. Then, we take flow_params[5], assign it to flow_params[5], which does nothing, then delete flow_params[5]. That would remove the key, but since we just copied the value to itself, maybe that's not intended. But the problem statement says to replace the value of flow_params[register_number] with flow_params[register_value], so if they are the same, maybe it's a no-op except deleting the key. But perhaps the function is designed to handle that scenario, but the user is responsible for ensuring that register_number and register_value are different. However, since the problem doesn't specify, I should proceed as per the docstring.

So the code would be:

flow_params[register_number] = flow_params[register_value]
del flow_params[register_value]

But wait, what if register_value is not present? Then this would raise a KeyError. But the docstring doesn't mention handling that. So maybe the function expects that register_value is a valid key in flow_params. So the code is straightforward.

So the function is simple. Just assign the value from register_value to register_number and delete the register_value key. That's all. Let me make sure I'm not missing anything. The parameters are flow_params, register_number, and register_value. The function modifies flow_params in place. So the code would be as follows.

I think that's it. Let me write the code.
