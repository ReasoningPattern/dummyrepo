import os
import json

def validate_version_inventories(self, version_dirs):
    """
    Each version SHOULD have an inventory up to that point.

    Also keep a record of any content digests different from those in the root inventory
    so that we can also check them when validating the content.

    version_dirs is an array of version directory names and is assumed to be in
    version sequence (1, 2, 3...).
    """
    differences = []
    for version_dir in version_dirs:
        inventory_path = os.path.join(version_dir, 'inventory.json')
        if not os.path.exists(inventory_path):
            raise FileNotFoundError(f"Inventory file not found in {version_dir}")
        with open(inventory_path, 'r') as f:
            current_inventory = json.load(f)
        for content_id, current_digest in current_inventory.items():
            root_digest = self.root_inventory.get(content_id)
            if root_digest is None or current_digest != root_digest:
                differences.append((content_id, current_digest, root_digest))
    return differences