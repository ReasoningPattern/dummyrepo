def cachedmethod(cache, key=hashkey, lock=None):
    """
    Returns a decorator function that can call a result in the cache.
    """
    def decorator(func):
        def wrapper(*args, **kwargs):
            key_value = key(func, *args, **kwargs)
            if lock is not None:
                with lock:
                    if key_value in cache:
                        return cache[key_value]
                    result = func(*args, **kwargs)
                    cache[key_value] = result
                    return result
            else:
                if key_value in cache:
                    return cache[key_value]
                result = func(*args, **kwargs)
                cache[key_value] = result
                return result
        return wrapper
    return decorator