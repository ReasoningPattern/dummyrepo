def validate_fixity(self, fixity, manifest_files):
    """
    Validate fixity block in inventory. Check the structure of the fixity block and makes sure that only files listed in the manifest are referenced. Return error() in the class.
    """
    if not isinstance(fixity, dict):
        return self.error("Fixity block must be a dictionary")
    if 'hash_algorithm' not in fixity or 'entries' not in fixity:
        return self.error("Fixity block missing required keys: 'hash_algorithm' and 'entries'")
    allowed_algorithms = {'md5', 'sha1', 'sha256'}
    if fixity['hash_algorithm'] not in allowed_algorithms:
        return self.error(f"Invalid hash algorithm: {fixity['hash_algorithm']}. Allowed algorithms: {allowed_algorithms}")
    entries = fixity.get('entries', [])
    for entry in entries:
        if not isinstance(entry, dict) or 'path' not in entry or 'hash' not in entry:
            return self.error("Invalid entry in fixity block: missing 'path' or 'hash' key")
        if entry['path'] not in manifest_files:
            return self.error(f"File {entry['path']} not found in manifest")
    return None