import abc

def verifyClass(iface, candidate, tentative=False):
    """
    Verify that the *candidate* might correctly provide *iface*.
    """
    if not isinstance(iface, type):
        raise TypeError("iface must be a class")
    if not isinstance(candidate, type):
        raise TypeError("candidate must be a class")
    if not tentative:
        return issubclass(candidate, iface)
    else:
        if not isinstance(iface, abc.ABCMeta):
            raise TypeError("iface must be an abstract base class")
        abstract_methods = iface.__abstractmethods__
        for method in abstract_methods:
            if not hasattr(candidate, method):
                return False
        return True