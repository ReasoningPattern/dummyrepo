def update_last_applied_manifest_from_resp(
    last_applied_manifest, observer_schema, response
):
    """
    Together with :func:``update_last_applied_manifest_dict_from_resp``, this
    function is called recursively to update a partial ``last_applied_manifest``
    from a partial Kubernetes response.

    Args:
        last_applied_manifest (list): partial ``last_applied_manifest`` being
            updated
        observer_schema (list): partial ``observer_schema``
        response (list): partial response from the Kubernetes API.

    This function goes through all observed fields, and initializes their value in
    last_applied_manifest if they are not yet present.
    """
    for index, (observer_name, value) in enumerate(zip(observer_schema, response)):
        if observer_name not in last_applied_manifest:
            last_applied_manifest.append({observer_name: value})
    return last_applied_manifest