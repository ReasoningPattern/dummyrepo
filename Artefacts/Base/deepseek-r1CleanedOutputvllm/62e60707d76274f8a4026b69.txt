def point_type(name, fields, srid_map):
    """
    Dynamically Generating Point Class
    """
    if hasattr(__import__('__main__'), name):
        raise ValueError(f"Class {name} already exists")

    namespace = {}
    
    # Add fields as attributes
    for field, value in fields.items():
        setattr(namespace, field, value)
    
    # Add __setattr__ method
    def __setattr__(self, name, value):
        if hasattr(self, name):
            raise AttributeError(f"Attribute {name} already exists")
        setattr(namespace, name, value)
    
    # Add __init__ method
    def __init__(self, *args, **kwargs):
        for field, value in kwargs.items():
            if field not in fields:
                raise ValueError(f"Invalid field: {field}")
            if isinstance(value, int) and field in srid_map:
                setattr(self, field, srid_map.get(value, value))
            else:
                setattr(self, field, value)
    
    cls = type(name, (object,), namespace)
    return cls