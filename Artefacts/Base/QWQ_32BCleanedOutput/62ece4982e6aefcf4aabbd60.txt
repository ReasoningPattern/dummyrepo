import re

def size_to_bytes(size: str) -> int:
    """
    Convert human readable file size to bytes

    Args:
            size: str, a string representing a human readable file size (eg: '500K')
    Returns:
            int: file size in bytes
    """
    units = {'K': 1024, 'M': 1024**2, 'G': 1024**3, 'T': 1024**4, 'P': 1024**5, 'E': 1024**6}
    pattern = r'^(\d+(?:\.\d+)?)([KMGTP]?)B?$'
    s = size.strip().upper()
    match = re.match(pattern, s)
    if not match:
        raise ValueError("Invalid input format")
    num_str, unit = match.groups()
    try:
        number = float(num_str)
    except ValueError:
        raise ValueError("Invalid number")
    if unit and unit not in units:
        raise ValueError(f"Unknown unit: {unit}")
    return int(number * units.get(unit, 1))