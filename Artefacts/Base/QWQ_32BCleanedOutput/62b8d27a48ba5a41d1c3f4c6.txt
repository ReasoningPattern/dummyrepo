import functools

def cached(cache, key=hashkey, lock=None):
    def decorate(func):
        @functools.wraps(func)
        def wrapper(*args, **kwargs):
            k = key(func, *args, **kwargs)
            if lock:
                with lock:
                    if k in cache:
                        return cache[k]
                    v = func(*args, **kwargs)
                    cache[k] = v
                    return v
            else:
                if k in cache:
                    return cache[k]
                v = func(*args, **kwargs)
                cache[k] = v
                return v
        return wrapper
    return decorate